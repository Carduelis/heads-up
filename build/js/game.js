function _defineProperty(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}!function(){var t={},e={};EntryPoint=Marionette.Object.extend({initialize:function(){this.dictionaryName=Dictionary.choosed.getName(),localRead("dictionaryName")===this.dictionaryName?this.triggerMethod("dictionary:stored",localRead("dictionary")):this.triggerMethod("load:dictionary")},onLoadDictionary:function(){var t=this;console.log("onLoadDictionary"),$.get("assets/dictionaries/"+this.dictionaryName+".json").success(function(e){t.triggerMethod("dictionary:stored",e),t.storeDictionary(e)}).error(function(t){alert("Sorry, can't reach the dictionary. Try again or pick another one")})},storeDictionary:function(t){console.log("storeDictionary"),localSave("dictionaryName",this.dictionaryName),localSave("dictionary",t)},pickWord:function(){for(var t=this.getOption("dictionary"),e=this.getOption("pickedWords"),i=t.length,a=_.random(0,i-1);"undefined"!=typeof e[a];)a=_.random(0,i-1);return e[a]=t[a],t[a]},onDictionaryStored:function(t){console.log("onDictionaryStored"),this.dictionary=t,this.pickedWords={},this.triggerMethod("show:word")},onShowWord:function(){this.view=new Game.View.Main({dataset:{word:this.pickWord()}}),app.rootView.getRegion("content").show(this.view),this.bindEvents(this.view,this.childviewEvents)},childviewEvents:{pass:"onPassWord",correct:"onCorrectWord",next:"onNext"},onPassWord:function(t){t.model.set("guessed",!1),app.history.push(t.model)},onCorrectWord:function(t){t.model.set("guessed",!0),app.history.push(t.model)},onNext:function(t,e,i){app.timer.view.model.get("time")>0&&this.triggerMethod("show:word")}}),t.Main=Backbone.Model.extend({defaults:function(){return{word:"Default Word",guessed:void 0}}}),t.History=Backbone.Collection.extend({model:t.Main,initialize:function(){}}),app.history=new t.History,e.Main=Marionette.View.extend({template:"#t-main",className:"game-content",initialize:function(e){var i=this,a={delay:200,accZ:0,accSum41:0,accSum41Start:0,accSum41StartValue:0,accGravityZ:0,accGravityZHistory:{},accGravityZAverage:0,accTicks:0};_.extend(this,a),this.model=new t.Main(e.dataset),_.delay(function(){i.bindEvents(app.model,i.accelerometerModelEvents)},300),_.delay(function(){i.triggerMethod("vibra")},1e3),this.triggerMethod("get:info")},_calculateAccelerometerData:function(t){var e=(new Date).getTime();this.accGravityZ=t.get("gravity").z,this.accZ=t.get("z"),0===this.accTicks&&(this.accSum41Start=e),this.accGravityZAverage=(this.accGravityZAverage*this.accTicks+this.accGravityZ)/(this.accTicks+1),this.accTicks++,this.accSum41+=this.accGravityZ,this.accSum41-=this.accSum41StartValue,e-this.accSum41Start>this.delay&&(this.accTicks=0,this.accSum41Start=e,this.accSum41StartValue=this.accGravityZ)},onGetInfo:function(){var t=this;$.get("//api.pearson.com/v2/dictionaries/ldoce5/entries?headword="+this.model.get("word")).success(function(e){t.triggerMethod("render:info",e)})},onRenderInfo:function(t){if(200==t.status)try{this.$el.find(".info").html("may be a <b>"+t.results[0].part_of_speech+"</b>")}catch(t){this.$el.find(".info").text("not found"),console.error(t)}},onDestroy:function(){this.unbindEvents(app.model,this.accelerometerModelEvents),this.doNotVibrate=!0,stopVibrate()},onVibra:function(){var t=this;if(stopVibrate(),this.getOption("doNotVibrate")!==!0){var e=app.model.get("gravity").z,i=Math.abs(e)-3;Math.abs(e)<6&&Math.abs(e)>3&&(delay=300-100*i,delay=100,duration=10+10*i,duration=duration>50?50:duration,startPeristentVibrate(duration,delay)),_.delay(function(){t.triggerMethod("vibra")},300)}},templateContext:function(){var t=this.model.get("word").length,e=1,i=$(document).width(),a=.8*i/t/16,o=a<3?a:3;return{size:e+o}},accelerometerModelEvents:{change:"onGravityChange"},triggers:{'click [data-action="correct"]':"correct",'click [data-action="pass"]':"pass"},onTriggered:function(){var t=this;this.triggered=!0,_.delay(function(){1==t.triggered&&(t.accGravityZAverage>0?(t.triggerMethod("normal:state"),t.triggerMethod("pass",t)):(t.triggerMethod("normal:state"),t.triggerMethod("correct",t)))},this.delay)},onGravityChange:function(t){var e;this._calculateAccelerometerData(t);var i=t.get("gravity").z,a=t.get("z"),o=(e={vertical:Math.abs(i)<3,warningVertical:Math.abs(i)<6&&Math.abs(i)>3,wordCorrect:i<-6&&a>.8,wordIncorrect:i>6&&a<-.8},_defineProperty(e,"wordCorrect",i<-6&&a<-4),_defineProperty(e,"wordIncorrect",i>6&&a>4),_defineProperty(e,"wordTrigger",Math.abs(i)>5&&Math.abs(a)>2),e);o.vertical&&this.triggerMethod("normal:state"),app.timer.view.timer.pause!==!0?(o.wordTrigger&&this.triggerMethod("triggered"),o.warningVertical&&this.triggerMethod("warning:state",i)):this.triggerMethod("normal:state")},onNormalState:function(){this.triggered=!1,this.$el.removeClass("warning"),console.log("normal:state"),stopVibrate()},onWarningState:function(t){console.log("warning:state"),this.$el.addClass("warning")},onStartSwipeAnimation:function(){var t=this;_.delay(function(){t.$el.addClass("swiped"),_.delay(function(){t.triggerMethod("next")},300)},300)},onDisableGuessing:function(){this.unbindEvents(app.model,this.accelerometerModelEvents),this.$el.find("[data-action]").attr("disabled","disabled"),this.doNotVibrate=!0},onPass:function(){playSound("wrong"),this.$el.addClass("pass"),this.triggerMethod("disable:guessing"),this.triggerMethod("start:swipe:animation")},onBeforeWordDissapearing:function(){},onPrev:function(){prevWordModel=app.history.last()},onCorrect:function(){playSound("correct"),this.$el.addClass("correct"),this.triggerMethod("disable:guessing"),this.triggerMethod("start:swipe:animation")}}),window.Game={View:e,Data:t,Entry:EntryPoint}}();
//# sourceMappingURL=game.js.map
