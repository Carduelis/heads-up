{"version":3,"sources":["js/main.js"],"names":["localSave","key","json","localStorage","setItem","JSON","stringify","localRead","parse","getItem","RegionSetter","this","arguments","length","_","isArray","prefix","builder","prototype","regions","i","regionName","el","replaceElement","AcceleratorData","Backbone","Model","extend","defaults","x","y","z","alpha","beta","gamma","gravity","App","Marionette","Application","region","initialize","options","console","log","model","onStart","getRegion","rootView","RootView","show","app","on","e","history","start","window","DeviceMotionEvent","ondevicemotion","dataset","acceleration","accelerationIncludingGravity","rotationRate","delay","set","AcceleratorDebug","View","template","className","modelEvents","change","triggerMethod","getNow","Date","getTime","onSetRenderTime","lastRenderTime","checkRender","delta","render","onBeforeRender","onRender","$","document","ready"],"mappings":"AAAA,QAASA,WAAUC,EAAIC,GAEtB,MADAC,cAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KAClC,EAER,QAASK,WAAUN,GAClB,GAAIC,GAAOG,KAAKG,MAAML,aAAaM,QAAQR,GAC3C,OAAOC,GAGR,GAAIQ,cAAe,WAMlB,MALAC,MAAKC,UAAYA,UACY,GAAzBD,KAAKC,UAAUC,QAAeC,EAAEC,QAAQJ,KAAKC,UAAU,MAC1DD,KAAKC,UAAYA,UAAU,IAE5BD,KAAKK,OAAS,KACPL,KAAKM,UAEbP,cAAaQ,UAAUD,QAAU,WAChCE,UACA,KAAK,GAAIC,KAAKT,MAAKC,UAAW,CAC7B,GAAIS,GAAaV,KAAKC,UAAUQ,EAChCD,SAAQE,IACPC,GAAIX,KAAKK,OAAOK,EAChBE,gBAAgB,GAGlB,MAAOJ,SAER,IAAIK,iBAAkBC,SAASC,MAAMC,QACpCC,SAAU,WACT,OACCC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,KAAM,EACNC,MAAO,EACPC,SACCN,EAAG,EACHC,EAAG,EACHC,EAAG,OAKHK,IAAMC,WAAWC,YAAYX,QAChCY,OAAQ,OACRC,WAAY,SAASC,GACpBC,QAAQC,IAAI,cAAeF,GAC3B9B,KAAKiC,MAAQ,GAAIpB,kBAElBqB,QAAS,WACRH,QAAQC,IAAIhC,KAAKmC,aACjBnC,KAAKoC,SAAW,GAAIC,WACnBJ,MAAOjC,KAAKiC,QAEbjC,KAAKmC,YAAYG,KAAKtC,KAAKoC,YAI7BG,KAAM,GAAId,KACVc,IAAIC,GAAG,QAAS,SAACC,GAChB3B,SAAS4B,QAAQC,QAEuB,mBAA7BC,QAAOC,oBACjBD,OAAOE,eAAiB,SAASL,GAChC,GAAIM,GAAU5C,EAAEa,UAAUyB,EAAEO,aAC5BD,GAAQvB,QAAUiB,EAAEQ,6BAChBR,EAAES,cACL/C,EAAEa,OAAO+B,EAAQN,EAAES,cAEpB/C,EAAEgD,MAAM,WACNZ,IAAIN,MAAMmB,IAAIL,IACd,SAKLR,IAAIC,GAAG,eAAiB,SAACC,KAIzB,IAAIY,kBAAmB3B,WAAW4B,KAAKtC,QACtCuC,SAAU,uBACVC,UAAW,YACX3B,WAAY,SAASC,GACpB9B,KAAKiC,MAAQH,EAAQG,OAEtBwB,aAECC,OAAU,UAEX7B,WAAY,WACX7B,KAAK2D,cAAc,oBAEpBC,OAAQ,WACP,OAAO,GAAIC,OAAOC,WAEnBC,gBAAiB,WAChB/D,KAAKgE,eAAiBhE,KAAK4D,UAE5BK,YAAa,WACZ,GAAIC,GAAQlE,KAAK4D,SAAW5D,KAAKgE,cAC7BE,GAAQ,KACXlE,KAAKmE,UAGPC,eAAgB,WACfpE,KAAK2D,cAAc,sBAGjBtB,SAAWX,WAAW4B,KAAKtC,QAC9BuC,SAAU,UACV/C,QAAS,GAAIT,cAAa,UAAU,YAAY,WAChD8B,WAAY,SAASC,GACpB9B,KAAKiC,MAAQH,EAAQG,OAEtBoC,SAAU,WACTrE,KAAKmC,UAAU,WAAWG,KAAK,GAAIe,mBAClCpB,MAAOjC,KAAKiC,WAMfqC,GAAEC,UAAUC,MAAM,WACjBjC,IAAII","file":"js/main.js","sourcesContent":["function localSave(key,json) {\n\tlocalStorage.setItem(key, JSON.stringify(json));\n\treturn true;\n};\nfunction localRead(key) {\n\tvar json = JSON.parse(localStorage.getItem(key));\n\treturn json;\n};\n\nvar RegionSetter = function() {\n\tthis.arguments = arguments;\n\tif (this.arguments.length == 1 && _.isArray(this.arguments[0])) {\n\t\tthis.arguments = arguments[0]\n\t}\n\tthis.prefix = 'r-';\n\treturn this.builder();\n};\nRegionSetter.prototype.builder = function() {\n\tregions = {};\n\tfor (var i in this.arguments) {\n\t\tvar regionName = this.arguments[i]\n\t\tregions[regionName] = {\n\t\t\tel: this.prefix+regionName,\n\t\t\treplaceElement: true\n\t\t}\n\t}\n\treturn regions\n};\nvar AcceleratorData = Backbone.Model.extend({\n\tdefaults: function() {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0,\n\t\t\talpha: 0,\n\t\t\tbeta: 0,\n\t\t\tgamma: 0,\n\t\t\tgravity: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tz: 0,\n\t\t\t}\n\t\t}\n\t}\n});\nvar App = Marionette.Application.extend({\n\tregion: '#app',\n\tinitialize: function(options) {\n\t\tconsole.log('My options:', options);\n\t\tthis.model = new AcceleratorData();\n\t},\n\tonStart: function() {\n\t\tconsole.log(this.getRegion());\n\t\tthis.rootView = new RootView({\n\t\t\tmodel: this.model\n\t\t});\n\t\tthis.getRegion().show(this.rootView);\n\t\t// this.showView(new RootView()); // are the same\n\t},\n});\napp = new App();\napp.on('start', (e) => {\n\tBackbone.history.start();\n\n\tif (typeof window.DeviceMotionEvent !== 'undefined') {\n\t\twindow.ondevicemotion = function(e) {\n\t\t\tvar dataset = _.extend({},e.acceleration);\n\t\t\tdataset.gravity = e.accelerationIncludingGravity;\n\t\t\tif (e.rotationRate) {\n\t\t\t\t_.extend(dataset,e.rotationRate);\n\t\t\t};\n\t\t\t_.delay(()=>{\n \t\t\t\tapp.model.set(dataset);\n\t\t\t},100);\n\t\t\t\n\t\t}\n\t};\n});\napp.on('before:start', \t(e) => {\n\t\n});\n\nvar AcceleratorDebug = Marionette.View.extend({\n\ttemplate: '#t-accelerator-debug',\n\tclassName: 'acc-debug',\n\tinitialize: function(options) {\n\t\tthis.model = options.model;\n\t},\n\tmodelEvents: {\n\t\t// 'change': 'checkRender',\n\t\t'change': 'render'\n\t},\n\tinitialize: function() {\n\t\tthis.triggerMethod('set:render:time');\n\t},\n\tgetNow: function() {\n\t\treturn new Date().getTime()\n\t},\n\tonSetRenderTime: function() {\n\t\tthis.lastRenderTime = this.getNow();\n\t},\n\tcheckRender: function() {\n\t\tvar delta = this.getNow() - this.lastRenderTime;\n\t\tif (delta > 100) {\n\t\t\tthis.render();\n\t\t}\n\t},\n\tonBeforeRender: function() {\n\t\tthis.triggerMethod('set:render:time')\n\t}\n})\nvar RootView = Marionette.View.extend({\n\ttemplate: '#t-root',\n\tregions: new RegionSetter('navibar','statusbar','content'),\n\tinitialize: function(options) {\n\t\tthis.model = options.model;\n\t},\n\tonRender: function () {\n\t\tthis.getRegion('navibar').show(new AcceleratorDebug({\n\t\t\tmodel: this.model\n\t\t}));\n\t}\n});\n\n\n$(document).ready(function () {\n\tapp.start();\n\n});\n\n\n\n\n"],"sourceRoot":"/source/"}