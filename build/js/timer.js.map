{"version":3,"sources":["js/timer.js"],"names":["Data","View","Timer","Marionette","Object","extend","model","Backbone","Model","initialize","options","settings","localRead","timeSetting","_","find","title","this","set","value","triggerMethod","onStart","get","pause","onAfterTick","onStop","onEnd","onPause","onPlay","onTick","ms","_this","delay","EntryPoint","timer","tick","view","app","rootView","getRegion","show","template","className","modelEvents","change","templateContext","time","minutes","Math","floor","seconds","onScaled","_this2","console","log","duration","$el","toggleClass","onHighlight","_this3","addClass","onBeforeRender","_this4","router","navigate","trigger","onRender","window","Entry"],"mappings":"CAAC,WACD,GAAIA,MAAWC,KAMXC,EAAQC,WAAWC,OAAOC,QAC7BC,MAAO,GAAIC,UAASC,MACpBC,WAAY,SAASC,GACpB,GAAIC,GAAWC,UAAU,YACrBC,EAAcC,EAAEC,KAAKJ,GAAWK,MAAO,kBACvCH,GACHI,KAAKX,MAAMY,IAAI,OAAyB,GAAlBL,EAAYM,MAAS,KAE3CF,KAAKX,MAAMY,IAAI,OAAO,KAEvBD,KAAKG,cAAc,UAEpBC,QAAS,WACRJ,KAAKX,MAAMY,IAAI,YAAYD,KAAKX,MAAMgB,IAAI,SAC1CL,KAAKM,OAAQ,EACbN,KAAKG,cAAc,SAEpBI,YAAa,aAEbC,OAAQ,WACPR,KAAKX,MAAMY,IAAI,OAAOD,KAAKX,MAAMgB,IAAI,cACrCL,KAAKM,OAAQ,CACFN,MAAKX,MAAMgB,IAAI,SAE3BI,MAAO,aAGPC,QAAS,WACRV,KAAKM,OAAQ,GAEdK,OAAQ,WACPX,KAAKM,OAAQ,GAEdM,OAAQ,SAASC,GAAI,GAAAC,GAAAd,IACpBA,MAAKG,cAAc,cACnB,IAAIU,GAAKA,GAAM,GACfb,MAAKX,MAAMY,IAAI,OAAOD,KAAKX,MAAMgB,IAAI,QAAUQ,GAC3Cb,KAAKX,MAAMgB,IAAI,QAAU,EACvBL,KAAKM,OACTT,EAAEkB,MAAM,WACPD,EAAKX,cAAc,OAAOU,IACzBA,GAGHb,KAAKG,cAAc,OAEpBH,KAAKG,cAAc,iBAIjBa,EAAa9B,WAAWC,OAAOC,QAClCI,WAAY,WACXQ,KAAKiB,MAAQ,GAAIhC,IAChBiC,KAAM,MAEPlB,KAAKmB,KAAO,GAAInC,GAAKC,OACpBI,MAAOW,KAAKiB,MAAM5B,QAEnB+B,IAAIC,SAASC,UAAU,UAAUC,KAAKvB,KAAKmB,QAK7CnC,GAAKC,MAAQC,WAAWF,KAAKI,QAC5BoC,SAAU,WACVC,UAAW,QACXjC,WAAY,SAASC,KAGrBiC,aACCC,OAAW,UAEZC,gBAAiB,WAChB,GAAIC,GAAO7B,KAAKX,MAAMgB,IAAI,QACtByB,EAAUC,KAAKC,MAAMH,EAAO,GAAK,KACjCI,EAAUF,KAAKC,OAAOH,EAAiB,GAAVC,EAAe,KAAM,IAOtD,OANc,IAAVA,IACHA,EAAU,IAAIA,GAED,GAAVG,IACHA,EAAU,IAAIA,IAGdH,QAAUA,EACVG,QAAUA,IAGZC,SAAU,WAAW,GAAAC,GAAAnC,IACpBoC,SAAQC,IAAI,SACZ,IAAIC,GAAW,IACXpB,EAAO,IACPH,GAASG,EAAgB,EAAToB,GAAY,CAChCzC,GAAEkB,MAAM,WACPoB,EAAKI,IAAIC,YAAY,UACrB3C,EAAEkB,MAAM,WACPoB,EAAKI,IAAIC,YAAY,WACpBzB,IACDuB,IAEHG,YAAa,WAAW,GAAAC,GAAA1C,IAEvBH,GAAEkB,MAAM,WACP2B,EAAKH,IAAII,SAAS,cACjB,MAEHC,eAAgB,WAAW,GAAAC,GAAA7C,IACI,IAA1BA,KAAKX,MAAMgB,IAAI,UAClBR,EAAEkB,MAAM,WACP8B,EAAKN,IAAII,SAAS,eACjB,KACF9C,EAAEkB,MAAM,WACP8B,EAAKN,IAAII,SAAS,cACjB,MACF9C,EAAEkB,MAAM,WACPK,IAAI0B,OAAOC,SAAS,WACnBC,SAAS,KAET,OAG4B,MAA3BhD,KAAKX,MAAMgB,IAAI,SAElBL,KAAKG,cAAc,aAEhBH,KAAKX,MAAMgB,IAAI,QAAU,KAC5BL,KAAKG,cAAc,cAGrB8C,SAAU,WACTb,QAAQC,IAAI,aAIda,OAAOjE,OACND,KAAMA,EACND,KAAMA,EACNoE,MAAOnC","file":"js/timer.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n// to do\r\n// Timer is going down and model every 1s changes then render happens\r\n// Timer is not related model, model just gets value of the timer\r\n\r\nvar Timer = Marionette.Object.extend({\r\n\tmodel: new Backbone.Model(),\r\n\tinitialize: function(options) {\r\n\t\tvar settings = localRead('settings');\r\n\t\tvar timeSetting = _.find(settings, {title: 'Время на раунд'});\r\n\t\tif (timeSetting) {\r\n\t\t\tthis.model.set('time',timeSetting.value*60*1000);\r\n\t\t} else {\r\n\t\t\tthis.model.set('time',60*1000); // 1 minute\r\n\t\t}\r\n\t\tthis.triggerMethod('start')\r\n\t},\r\n\tonStart: function() {\r\n\t\tthis.model.set('startTime',this.model.get('time'));\r\n\t\tthis.pause = false;\r\n\t\tthis.triggerMethod('tick');\r\n\t},\r\n\tonAfterTick: function () {\r\n\t},\r\n\tonStop: function() {\r\n\t\tthis.model.set('time',this.model.get('startTime'));\r\n\t\tthis.pause = true;\r\n\t\tvar time = this.model.get('time');\r\n\t},\r\n\tonEnd: function() {\r\n\t\t// first show \"time is up\"-notify\r\n\t},\r\n\tonPause: function() {\r\n\t\tthis.pause = true;\r\n\t},\r\n\tonPlay: function() {\r\n\t\tthis.pause = false;\r\n\t},\r\n\tonTick: function(ms) {\r\n\t\tthis.triggerMethod('before:tick');\r\n\t\tvar ms = ms || 1000;\r\n\t\tthis.model.set('time',this.model.get('time') - ms);\r\n\t\tif (this.model.get('time') > 0) {\r\n\t\t\tif (!this.pause) {\r\n\t\t\t\t_.delay(() => {\r\n\t\t\t\t\tthis.triggerMethod('tick',ms);\r\n\t\t\t\t},ms);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('end');\r\n\t\t}\r\n\t\tthis.triggerMethod('after:tick');\r\n\t}\r\n\r\n})\r\nvar EntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tthis.timer = new Timer({\r\n\t\t\ttick: 1000\r\n\t\t});\r\n\t\tthis.view = new View.Timer({\r\n\t\t\tmodel: this.timer.model\r\n\t\t});\r\n\t\tapp.rootView.getRegion('footer').show(this.view);\r\n\t},\r\n});\r\n\r\n\r\nView.Timer = Marionette.View.extend({\r\n\ttemplate: '#t-timer',\r\n\tclassName: 'timer',\r\n\tinitialize: function(options) {\r\n\r\n\t},\r\n\tmodelEvents: {\r\n\t\t'change'\t: 'render',\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar time = this.model.get('time');\r\n\t\tvar minutes = Math.floor(time / 60 / 1000);\r\n\t\tvar seconds = Math.floor((time - minutes * 60 * 1000)/1000);\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0'+minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0'+seconds;\r\n\t\t}\r\n\t\treturn \t{\r\n\t\t\t'minutes':minutes,\r\n\t\t\t'seconds':seconds\r\n\t\t}\r\n\t},\r\n\tonScaled: function() {\r\n\t\tconsole.log('scaled')\r\n\t\tvar duration = 300;\r\n\t\tvar tick = 1000;\r\n\t\tvar delay = (tick - duration*2)/2;\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.toggleClass('scaled');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.toggleClass('scaled')\r\n\t\t\t},delay);\r\n\t\t},duration);\r\n\t},\r\n\tonHighlight: function() {\r\n\t\t// this.$el.addClass('highlight')\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('highlight');\r\n\t\t},200);\r\n\t},\r\n\tonBeforeRender: function() {\r\n\t\tif (this.model.get('time') == 0) {\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.addClass('time-is-up');\r\n\t\t\t},100);\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.addClass('bound-out');\r\n\t\t\t},1100);\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tapp.router.navigate('results',{\r\n\t\t\t\t\ttrigger: true\r\n\t\t\t\t});\r\n\t\t\t},1500);\r\n\t\t}\r\n\r\n\t\tif (this.model.get('time') === 10000) {\r\n\t\t\t// this.triggerMethod('scaled');\r\n\t\t\tthis.triggerMethod('highlight');\r\n\t\t}\r\n\t\tif (this.model.get('time') < 4000) {\r\n\t\t\tthis.triggerMethod('highlight');\r\n\t\t}\r\n\t},\r\n\tonRender: function() {\r\n\t\tconsole.log('render');\r\n\t},\r\n});\r\n\r\nwindow.Timer = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"],"sourceRoot":"/source/"}