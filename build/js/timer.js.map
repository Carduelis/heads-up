{"version":3,"sources":["js/timer.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","settings","localRead","time","_","find","title","value","this","view","Timer","model","Backbone","Model","app","rootView","getRegion","show","template","options","className","regions","RegionSetter","triggerMethod","modelEvents","change:time","change","onDecreaseTime","_this","get","delay","set","router","navigate","trigger","timeToSeconds","minutes","Math","floor","seconds","timeToMinutes","onRender","templateContext","window","Entry"],"mappings":"CAAC,WACD,GAAIA,MAAWC,IAMfC,YAAaC,WAAWC,OAAOC,QAC9BC,WAAY,WACX,GAAIC,GAAWC,UAAU,WAEzBC,MAAOC,EAAEC,KAAKJ,GAAWK,MAAO,mBAC5BH,KACHA,KAAkB,GAAXA,KAAKI,MAEZJ,KAAO,GAERK,KAAKC,KAAO,GAAId,GAAKe,OACpBC,MAAO,GAAIC,UAASC,OAEnBV,KAAM,QAGRW,IAAIC,SAASC,UAAU,UAAUC,KAAKT,KAAKC,QAK/BZ,YAAWF,KAAKI,QAC7BmB,SAAUd,EAAEc,SAAS,gBACrBlB,WAAY,SAASmB,GACpBX,KAAKG,MAAQQ,EAAQR,SAGTd,WAAWF,KAAKI,QAC7BmB,SAAUd,EAAEc,SAAS,gBACrBlB,WAAY,SAASmB,GACpBX,KAAKG,MAAQQ,EAAQR,QAIvBhB,GAAKe,MAAQb,WAAWF,KAAKI,QAC5BmB,SAAU,WACVE,UAAW,QACXC,QAAS,GAAIC,cAAa,UAAU,WACpCtB,WAAY,SAASmB,GACpBX,KAAKe,cAAc,kBAEpBC,aACCC,cAAgB,iBAChBC,OAAW,UAEZC,eAAgB,WAAW,GAAAC,GAAApB,KACtBL,EAAOK,KAAKG,MAAMkB,IAAI,OACtB1B,GAAO,EACVC,EAAE0B,MAAM,WACP3B,GAAc,EACdyB,EAAKjB,MAAMoB,IAAI,OAAO5B,IACrB,KAGFW,IAAIkB,OAAOC,SAAS,WACnBC,SAAS,KAIZC,cAAe,WACd,GAAIhC,GAAOK,KAAKG,MAAMkB,IAAI,QACtBO,EAAUC,KAAKC,MAAMnC,EAAO,GAKhC,OAJAoC,SAAUpC,EAAiB,GAAViC,EACbG,QAAU,KACbA,QAAU,IAAIA,SAERA,SAERC,cAAgB,WACf,GAAIrC,GAAOK,KAAKG,MAAMkB,IAAI,QACtBO,EAAUC,KAAKC,MAAMnC,EAAO,GAKhC,OAJAoC,SAAUpC,EAAiB,GAAViC,EACH,GAAVA,IACHA,EAAU,IAAIA,GAERA,GAERK,SAAU,aAEVC,gBAAiB,WAChB,OACCH,QAAY/B,KAAK2B,gBACjBC,QAAY5B,KAAKgC,oBAKpBG,OAAOjC,OACNf,KAAMA,EACND,KAAMA,EACNkD,MAAOhD","file":"js/timer.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n// to do\r\n// Timer is going down and model every 1s changes then render happens\r\n// Timer is not related model, model just gets value of the timer\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tvar settings = localRead('settings');\r\n\t\tvar dataset = {};\r\n\t\ttime = _.find(settings, {title: 'Время на раунд'});\r\n\t\tif (time) {\r\n\t\t\ttime = time.value*60\r\n\t\t} else {\r\n\t\t\ttime = 60;\r\n\t\t}\r\n\t\tthis.view = new View.Timer({\r\n\t\t\tmodel: new Backbone.Model({\r\n\t\t\t\t// time: time,\r\n\t\t\t\ttime: 100000,\r\n\t\t\t})\r\n\t\t});\r\n\t\tapp.rootView.getRegion('footer').show(this.view);\r\n\t},\r\n});\r\n\r\n\r\nvar Minutes = Marionette.View.extend({\r\n\ttemplate: _.template('<%-minutes%>'),\r\n\tinitialize: function(options) {\r\n\t\tthis.model = options.model\r\n\t}\r\n});\r\nvar Seconds = Marionette.View.extend({\r\n\ttemplate: _.template('<%-seconds%>'),\r\n\tinitialize: function(options) {\r\n\t\tthis.model = options.model\r\n\t}\r\n});\r\n\r\nView.Timer = Marionette.View.extend({\r\n\ttemplate: '#t-timer',\r\n\tclassName: 'timer',\r\n\tregions: new RegionSetter('minutes','seconds'),\r\n\tinitialize: function(options) {\r\n\t\tthis.triggerMethod('decrease:time');\r\n\t},\r\n\tmodelEvents: {\r\n\t\t'change:time' : 'onDecreaseTime',\r\n\t\t'change'\t: 'render'\r\n\t},\r\n\tonDecreaseTime: function() {\r\n\t\tvar time = this.model.get('time');\r\n\t\tif (time > 0) {\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\ttime = time - 1;\r\n\t\t\t\tthis.model.set('time',time);\r\n\t\t\t},1000)\r\n\t\t} else {\r\n\r\n\t\t\tapp.router.navigate('results',{\r\n\t\t\t\ttrigger: true\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\ttimeToSeconds: function () {\r\n\t\tvar time = this.model.get('time');\r\n\t\tvar minutes = Math.floor(time / 60);\r\n\t\tseconds = time - minutes * 60;\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0'+seconds;\r\n\t\t}\r\n\t\treturn seconds\r\n\t},\r\n\ttimeToMinutes : function() {\r\n\t\tvar time = this.model.get('time');\r\n\t\tvar minutes = Math.floor(time / 60);\r\n\t\tseconds = time - minutes * 60;\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0'+minutes;\r\n\t\t}\r\n\t\treturn minutes\r\n\t},\r\n\tonRender: function() {\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\treturn {\r\n\t\t\t'seconds' : this.timeToSeconds(),\r\n\t\t\t'minutes' : this.timeToMinutes(),\r\n\t\t}\r\n\t}\r\n});\r\n\r\nwindow.Timer = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"],"sourceRoot":"/source/"}