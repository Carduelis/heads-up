{"version":3,"sources":["js/timer.js"],"names":["Data","View","Timer","Marionette","Object","extend","model","Backbone","Model","initialize","localRead","timeSetting","title","this","value","set","triggerMethod","onStart","get","pause","onAfterTick","onDestroy","onStop","log","console","onPause","onPlay","onTick","ms","_this","_","delay","EntryPoint","getRegion","show","view","template","options","className","tick","timer","modelEvents","change","triggers","click [data-action=\"pause\"]","templateContext","time","floor","seconds","Math","minutes","isPause","onScaled","_this2","duration","onHighlight","$el","toggleClass","_this3","addClass","onBeforeRender","_this4","app","router","navigate","onRender","window"],"mappings":"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","file":"timer.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n// to do\r\n// Timer is going down and model every 1s changes then render happens\r\n// Timer is not related model, model just gets value of the timer\r\n\r\nvar Timer = Marionette.Object.extend({\r\n\tmodel: new Backbone.Model(),\r\n\tinitialize: function(options) {\r\n\t\tvar settings = localRead('settings');\r\n\t\tvar timeSetting = _.find(settings, {title: 'Время на раунд'});\r\n\t\tif (timeSetting) {\r\n\t\t\tthis.model.set('time',timeSetting.value*60*1000);\r\n\t\t} else {\r\n\t\t\tthis.model.set('time',60*1000); // 1 minute\r\n\t\t}\r\n\t\tthis.triggerMethod('start')\r\n\t},\r\n\tonStart: function() {\r\n\t\tthis.model.set('startTime',this.model.get('time'));\r\n\t\tthis.pause = false;\r\n\t\tthis.triggerMethod('tick');\r\n\t},\r\n\tonAfterTick: function() {\r\n\t\t//\r\n\t},\r\n\tonDestroy : function() {\r\n\t\tthis.pause = true;\r\n\t},\r\n\tonStop: function() {\r\n\t\tconsole.log('stop')\r\n\t\tthis.model.set('time',this.model.get('startTime'));\r\n\t\tthis.pause = true;\r\n\t\tvar time = this.model.get('time');\r\n\t},\r\n\tonPause: function() {\r\n\t\tthis.pause = true;\r\n\t},\r\n\tonPlay: function() {\r\n\t\tthis.pause = false;\r\n\t\tthis.triggerMethod('tick');\r\n\t},\r\n\tonTick: function(ms) {\r\n\t\tthis.triggerMethod('before:tick');\r\n\t\tvar ms = ms || 1000;\r\n\t\tthis.model.set('time',this.model.get('time') - ms);\r\n\t\tif (this.model.get('time') > 0) {\r\n\t\t\tif (!this.pause) {\r\n\t\t\t\t_.delay(() => {\r\n\t\t\t\t\tthis.triggerMethod('tick',ms);\r\n\t\t\t\t},ms);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('end');\r\n\t\t}\r\n\t\tthis.triggerMethod('after:tick');\r\n\t}\r\n\r\n})\r\nvar EntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\r\n\t\tthis.view = new View.Timer();\r\n\t\tapp.rootView.getRegion('footer').show(this.view);\r\n\t},\r\n});\r\n\r\n\r\nView.Timer = Marionette.View.extend({\r\n\ttemplate: '#t-timer',\r\n\tclassName: 'timer',\r\n\tinitialize: function(options) {\r\n\t\tthis.timer = new Timer({\r\n\t\t\ttick: 1000\r\n\t\t});\r\n\t\tthis.model = this.timer.model\r\n\t},\r\n\tmodelEvents: {\r\n\t\t'change'\t: 'render',\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"pause\"]' : 'pause'\r\n\t},\r\n\tonPause: function() {\r\n\t\tconsole.log(this.timer.pause);\r\n\t\tif (this.timer.pause) {\r\n\t\t\tthis.timer.triggerMethod('play');\r\n\t\t} else {\r\n\t\t\tthis.timer.triggerMethod('pause');\r\n\t\t}\r\n\t},\r\n\tonDestroy: function() {\r\n\t\tthis.timer.triggerMethod('destroy');\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar time = this.model.get('time');\r\n\t\tvar minutes = Math.floor(time / 60 / 1000);\r\n\t\tvar seconds = Math.floor((time - minutes * 60 * 1000)/1000);\r\n\t\tif (minutes < 10) {\r\n\t\t\tminutes = '0'+minutes;\r\n\t\t}\r\n\t\tif (seconds < 10) {\r\n\t\t\tseconds = '0'+seconds;\r\n\t\t}\r\n\t\treturn \t{\r\n\t\t\t'minutes':minutes,\r\n\t\t\t'seconds':seconds,\r\n\t\t\t'isPause': this.timer.pause \r\n\t\t}\r\n\t},\r\n\tonScaled: function() {\r\n\t\tconsole.log('scaled')\r\n\t\tvar duration = 300;\r\n\t\tvar tick = 1000;\r\n\t\tvar delay = (tick - duration*2)/2;\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.toggleClass('scaled');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.toggleClass('scaled')\r\n\t\t\t},delay);\r\n\t\t},duration);\r\n\t},\r\n\tonHighlight: function() {\r\n\t\t// this.$el.addClass('highlight')\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('highlight');\r\n\t\t},200);\r\n\t},\r\n\tonBeforeRender: function() {\r\n\t\tif (this.model.get('time') == 0) {\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.addClass('time-is-up');\r\n\t\t\t},100);\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.$el.addClass('bound-out');\r\n\t\t\t},1100);\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tapp.router.navigate('results',{\r\n\t\t\t\t\ttrigger: true\r\n\t\t\t\t});\r\n\t\t\t},1500);\r\n\t\t}\r\n\r\n\t\tif (this.model.get('time') === 10000) {\r\n\t\t\t// this.triggerMethod('scaled');\r\n\t\t\tthis.triggerMethod('highlight');\r\n\t\t}\r\n\t\tif (this.model.get('time') < 4000) {\r\n\t\t\tthis.triggerMethod('highlight');\r\n\t\t}\r\n\t},\r\n\tonRender: function() {\r\n\t\tconsole.log('render');\r\n\t},\r\n});\r\n\r\nwindow.Timer = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"]}