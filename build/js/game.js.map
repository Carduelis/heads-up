{"version":3,"sources":["js/game.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","this","dictionaryName","app","dictionary","get","e","console","error","localRead","triggerMethod","onLoadDictionary","_this","log","$","success","storeDictionary","alert","localSave","pickWord","getOption","pickedWords","length","wordId","_","random","onDictionaryStored","onShowWord","view","Game","Main","dataset","word","rootView","getRegion","show","bindEvents","childviewEvents","pass","correct","next","onPassWord","model","set","history","push","onCorrectWord","onNext","a","b","timer","Backbone","Model","defaults","guessed","undefined","History","Collection","template","className","options","_this2","delay","accelerometerModelEvents","onGetInfo","_this3","response","onRenderInfo","status","$el","find","html","results","part_of_speech","text","onBeforeDestoy","stopVibrate","doNotVibrate","onVibra","_this4","tilt","z","vibroFrequencyModifier","Math","abs","duration","startPeristentVibrate","templateContext","base","width","document","k","delta","size","change","triggers","click [data-action=\"correct\"]","click [data-action=\"pass\"]","onGravityChange","accelerateTilt","conditions","vertical","warningVertical","wordCorrect","wordIncorrect","onNormalState","removeClass","onWarningState","addClass","onStartSwipeAnimation","_this5","onDisableGuessing","unbindEvents","attr","onPass","playSound","onBeforeWordDissapearing","onPrev","prevWordModel","last","onCorrect","window","Entry"],"mappings":"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","file":"js/game.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\ttry {\r\n\t\t\tthis.dictionaryName = app.dictionary.get('name')+'_v'+app.dictionary.get('version');\r\n\t\t} catch(e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tthis.dictionaryName = 'default_v0'\r\n\t\t}\r\n\t\tif (localRead('dictionaryName') === this.dictionaryName) {\r\n\t\t\tthis.triggerMethod('dictionary:stored', localRead('dictionary'));\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('load:dictionary');\r\n\t\t}\r\n\t},\r\n\tonLoadDictionary: function() {\r\n\t\tconsole.log('onLoadDictionary');\r\n\t\t$.get('assets/dictionaries/'+this.dictionaryName+'.json').success(dictionary => {\r\n\t\t\tthis.triggerMethod('dictionary:stored', dictionary);\r\n\t\t\tthis.storeDictionary(dictionary);\r\n\t\t}).error(error => {\r\n\t\t\talert(\"Sorry, can't reach the dictionary. Try again or pick another one\");\r\n\t\t});\r\n\t},\r\n\tstoreDictionary: function(dictionary) {\r\n\t\tconsole.log('storeDictionary');\r\n\t\tlocalSave('dictionaryName',this.dictionaryName);\r\n\t\tlocalSave('dictionary',dictionary);\r\n\t},\r\n\t// onGetDictionary: function() {\r\n\t// \tif(localHas('dictionary')) {\r\n\t// \t\tthis.triggerMethod('dictionary:stored',localRead('dictionary'))\r\n\t// \t} else {\r\n\t// \t\t$.get('assets/dictionaries/'+dictionaryName+'.json').success(dictionary => {\r\n\t// \t\t\tthis.triggerMethod('dictionary:stored', dictionary);\r\n\t// \t\t}).error(error => {\r\n\t// \t\t\talert(\"Sorry, can't reach the dictionary. Try again or pick another one\");\r\n\t// \t\t});\r\n\t// \t}\r\n\t// },\r\n\tpickWord: function() {\r\n\t\t// to do \r\n\t\t// 1. trim dictionary (amount of words === seconds) \r\n\t\t// 2. shuffle trimmed dictionary\r\n\t\t// 3. pick next word \r\n\t\tvar dictionary = this.getOption('dictionary');\r\n\t\tvar pickedWords = this.getOption('pickedWords');\r\n\t\tvar length = dictionary.length;\r\n\t\tvar wordId = _.random(0,length-1);\r\n\t\twhile (typeof pickedWords[wordId] !== 'undefined') {\r\n\t\t\twordId = _.random(0,length-1);\r\n\t\t}\r\n\t\tpickedWords[wordId] = dictionary[wordId];\r\n\t\treturn dictionary[wordId]\r\n\t},\r\n\tonDictionaryStored: function(dictionary) {\r\n\t\tconsole.log('onDictionaryStored');\r\n\t\tthis.dictionary = dictionary;\r\n\t\tthis.pickedWords = {};\t\r\n\t\tthis.triggerMethod('show:word');\r\n\t},\r\n\tonShowWord: function() {\r\n\t\tthis.view = new Game.View.Main({\r\n\t\t\tdataset: {\r\n\t\t\t\tword: this.pickWord()\r\n\t\t\t}\r\n\t\t});\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t\tthis.bindEvents(this.view,this.childviewEvents);\r\n\t},\r\n\tchildviewEvents: {\r\n\t\t'pass' \t\t:\t'onPassWord',\r\n\t\t'correct'\t:\t'onCorrectWord',\r\n\t\t'next'\t\t:\t'onNext' \t\r\n\t},\r\n\tonPassWord: function(view) {\r\n\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',false);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonCorrectWord: function(view) {\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',true);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonNext: function (e,a,b) {\r\n\t\tif (app.timer.view.model.get('time') > 0) {\r\n\t\t\tthis.triggerMethod('show:word');\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nData.Main = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tword: 'Default Word',\r\n\t\t\tguessed: undefined\r\n\t\t}\r\n\t}\r\n});\r\nData.History = Backbone.Collection.extend({\r\n\tmodel: Data.Main,\r\n\tinitialize: function() {\r\n\r\n\t}\r\n});\r\n\r\n// word appears | vertical\r\n// word correct | tilted\r\n// word animated | tilted\r\n// word appears | tilted\r\n// word listen accelerometer \r\n\r\napp.history = new Data.History();\r\nView.Main = Marionette.View.extend({\r\n\ttemplate: '#t-main',\r\n\tclassName: 'game-content',\r\n\tinitialize: function(options) {\r\n\t\tthis.model = new Data.Main(options.dataset);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t},500);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.triggerMethod('vibra');\r\n\t\t},1500);\r\n\t\tthis.triggerMethod('get:info');\r\n\t},\r\n\tonGetInfo: function() {\r\n\t\t$.get('http://api.pearson.com/v2/dictionaries/ldoce5/entries?headword='+this.model.get('word')).success(response => {\r\n\t\t\tthis.triggerMethod('render:info',response)\r\n\t\t});\r\n\t},\r\n\tonRenderInfo : function(response) {\r\n\t\tif (response.status == 200) {\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tthis.$el.find('.info').html('may be a <b>'+response.results[0].part_of_speech+'</b>')\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.$el.find('.info').text('not found');\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t},\r\n\tonBeforeDestoy: function() {\r\n\t\tstopVibrate();\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonVibra: function() {\r\n\t\tstopVibrate();\r\n\t\tif (this.getOption('doNotVibrate') !== true) {\r\n\t\t\tvar tilt = app.model.get('gravity').z;\r\n\t\t\tvar vibroFrequencyModifier = Math.abs(tilt)-3;\r\n\t\t\t// [tilt 0..2]\r\n\t\t\t// 0 - rare\r\n\t\t\t// 2 - frequently\r\n\t\t\tif (Math.abs(tilt) < 6 && Math.abs(tilt) > 3) {\r\n\t\t\t\tdelay = 300 - vibroFrequencyModifier*100;\r\n\t\t\t\t// delay = delay < 100 ? 100 : delay;\r\n\t\t\t\tdelay = 100;\r\n\t\t\t\tduration = 10 + vibroFrequencyModifier*10;\r\n\t\t\t\tduration = duration > 50 ? 50 : duration;\r\n\t\t\t\tstartPeristentVibrate(duration, delay);\r\n\t\t\t}\r\n\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('vibra')\r\n\t\t\t},300)\r\n\t\t}\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar length = this.model.get('word').length;\r\n\t\tvar base = 1;\r\n\t\tvar width = $(document).width();\r\n\t\tvar k = width*0.8/length/16\r\n\t\tvar delta = k < 3 ? k : 3; \r\n\t\treturn {\r\n\t\t\tsize: base+delta\r\n\t\t}\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change': 'onGravityChange'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"correct\"]': 'correct',\r\n\t\t'click [data-action=\"pass\"]': 'pass',\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tvar tilt = model.get('gravity').z;\r\n\t\tvar accelerateTilt = model.get('z');\r\n\t\tvar conditions = {\r\n\t\t\tvertical\t\t : Math.abs(tilt) < 3,\r\n\t\t\twarningVertical\t : Math.abs(tilt) < 6 && Math.abs(tilt) > 3,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt > 0.8,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt < -0.8,\r\n\t\t};\r\n\r\n\t\tif (conditions.vertical) {\r\n\t\t\tthis.triggerMethod('normal:state')\r\n\t\t}\r\n\t\tif (conditions.wordCorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('correct',this);\r\n\t\t}\r\n\t\tif (conditions.wordIncorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('pass',this);\r\n\t\t}\r\n\t\tif (conditions.warningVertical) {\r\n\t\t\tthis.triggerMethod('warning:state', tilt);\r\n\t\t}\r\n\t},\r\n\tonNormalState: function() {\r\n\t\tthis.$el.removeClass('warning');\r\n\t\tconsole.log('normal:state')\r\n\t\tstopVibrate();\r\n\t},\r\n\tonWarningState: function(tilt) {\r\n\t\tconsole.log('warning:state')\r\n\t\tthis.$el.addClass('warning');\r\n\t},\r\n\tonStartSwipeAnimation: function () {\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('swiped');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('next');\r\n\t\t\t},300);\r\n\t\t},300);\r\n\t},\r\n\tonDisableGuessing: function() {\r\n\t\t// disable accelerometer-way\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t// disable button-way\r\n\t\tthis.$el.find('[data-action]').attr('disabled','disabled');\r\n\t\t// disable vibra\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonPass: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(200);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(100);\r\n\t\t// },100)\r\n\t\tplaySound('wrong');\r\n\t\tthis.$el.addClass('pass');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n\tonBeforeWordDissapearing: function() {\r\n\t\t\r\n\t},\r\n\tonPrev : function() {\r\n\t\tprevWordModel = app.history.last()\r\n\t},\r\n\tonCorrect: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(100);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(200);\r\n\t\t// },100)\r\n\t\tplaySound('correct');\r\n\t\tthis.$el.addClass('correct');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n})\r\n\r\nwindow.Game = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"],"sourceRoot":"/source/"}