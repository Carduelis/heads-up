{"version":3,"sources":["js/game.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","getName","this","dictionaryName","localRead","triggerMethod","onLoadDictionary","_this","console","log","success","dictionary","storeDictionary","$","alert","localSave","getOption","pickedWords","length","wordId","_","random","onDictionaryStored","onShowWord","view","Main","dataset","word","pickWord","getRegion","show","childviewEvents","app","rootView","correct","bindEvents","next","onPassWord","model","set","history","push","onCorrectWord","e","a","b","get","Backbone","Model","defaults","undefined","History","Collection","template","className","options","_this2","delay","accZ","defaultSettings","accSum41","accSum41Start","accSum41StartValue","accGravityZ","accGravityZAverage","accTicks","accelerometerModelEvents","_calculateAccelerometerData","ts","getTime","z","onGetInfo","_this3","response","$el","find","html","results","part_of_speech","onRenderInfo","status","text","error","unbindEvents","doNotVibrate","stopVibrate","onVibra","tilt","Math","abs","duration","vibroFrequencyModifier","startPeristentVibrate","templateContext","base","width","document","k","delta","size","change","click [data-action=\"correct\"]","click [data-action=\"pass\"]","onTriggered","_this5","triggered","triggers","onGravityChange","_conditions","accelerateTilt","conditions","vertical","warningVertical","wordIncorrect","_defineProperty","wordCorrect","pause","onNormalState","onWarningState","removeClass","onStartSwipeAnimation","_this6","attr","onPass","playSound","addClass","onBeforeWordDissapearing","onPrev","prevWordModel","last","onCorrect","window","Game","Entry"],"mappings":"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","file":"game.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tthis.dictionaryName = Dictionary.choosed.getName();\r\n\t\tif (localRead('dictionaryName') === this.dictionaryName) {\r\n\t\t\tthis.triggerMethod('dictionary:stored', localRead('dictionary'));\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('load:dictionary');\r\n\t\t}\r\n\t},\r\n\tonLoadDictionary: function() {\r\n\t\tconsole.log('onLoadDictionary');\r\n\t\t$.get('assets/dictionaries/'+this.dictionaryName+'.json').success(dictionary => {\r\n\t\t\tthis.triggerMethod('dictionary:stored', dictionary);\r\n\t\t\tthis.storeDictionary(dictionary);\r\n\t\t}).error(error => {\r\n\t\t\talert(\"Sorry, can't reach the dictionary. Try again or pick another one\");\r\n\t\t});\r\n\t},\r\n\tstoreDictionary: function(dictionary) {\r\n\t\tconsole.log('storeDictionary');\r\n\t\tlocalSave('dictionaryName',this.dictionaryName);\r\n\t\tlocalSave('dictionary',dictionary);\r\n\t},\r\n\tpickWord: function() {\r\n\t\t// to do \r\n\t\t// 1. trim dictionary (amount of words === seconds) \r\n\t\t// 2. shuffle trimmed dictionary\r\n\t\t// 3. pick next word \r\n\t\tvar dictionary = this.getOption('dictionary');\r\n\t\tvar pickedWords = this.getOption('pickedWords');\r\n\t\tvar length = dictionary.length;\r\n\t\tvar wordId = _.random(0,length-1);\r\n\t\twhile (typeof pickedWords[wordId] !== 'undefined') {\r\n\t\t\twordId = _.random(0,length-1);\r\n\t\t}\r\n\t\tpickedWords[wordId] = dictionary[wordId];\r\n\t\treturn dictionary[wordId]\r\n\t},\r\n\tonDictionaryStored: function(dictionary) {\r\n\t\tconsole.log('onDictionaryStored');\r\n\t\tthis.dictionary = dictionary;\r\n\t\tthis.pickedWords = {};\t\r\n\t\tthis.triggerMethod('show:word');\r\n\t},\r\n\tonShowWord: function() {\r\n\t\tthis.view = new Game.View.Main({\r\n\t\t\tdataset: {\r\n\t\t\t\tword: this.pickWord()\r\n\t\t\t}\r\n\t\t});\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t\tthis.bindEvents(this.view,this.childviewEvents);\r\n\t},\r\n\tchildviewEvents: {\r\n\t\t'pass' \t\t:\t'onPassWord',\r\n\t\t'correct'\t:\t'onCorrectWord',\r\n\t\t'next'\t\t:\t'onNext' \t\r\n\t},\r\n\tonPassWord: function(view) {\r\n\t\tview.model.set('guessed',false);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonCorrectWord: function(view) {\r\n\t\tview.model.set('guessed',true);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonNext: function (e,a,b) {\r\n\t\tif (app.timer.view.model.get('time') > 0) {\r\n\t\t\tthis.triggerMethod('show:word');\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nData.Main = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tword: 'Default Word',\r\n\t\t\tguessed: undefined\r\n\t\t}\r\n\t}\r\n});\r\nData.History = Backbone.Collection.extend({\r\n\tmodel: Data.Main,\r\n\tinitialize: function() {\r\n\r\n\t}\r\n});\r\n\r\n// word appears | vertical\r\n// word correct | tilted\r\n// word animated | tilted\r\n// word appears | tilted\r\n// word listen accelerometer \r\n\r\napp.history = new Data.History();\r\nView.Main = Marionette.View.extend({\r\n\ttemplate: '#t-main',\r\n\tclassName: 'game-content',\r\n\tinitialize: function(options) {\r\n\t\tvar defaultSettings = {\r\n\t\t\t// accLog: [],\r\n\t\t\tdelay: 200,\r\n\t\t\taccZ: 0,\r\n\t\t\taccSum41: 0,\r\n\t\t\taccSum41Start: 0,\r\n\t\t\taccSum41StartValue: 0,\r\n\t\t\taccGravityZ: 0,\r\n\t\t\taccGravityZHistory: {},\r\n\t\t\taccGravityZAverage: 0,\r\n\t\t\taccTicks: 0,\r\n\t\t}\r\n\t\t_.extend(this, defaultSettings);\r\n\t\tthis.model = new Data.Main(options.dataset);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t},300);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.triggerMethod('vibra');\r\n\t\t},1000);\r\n\t\tthis.triggerMethod('get:info');\r\n\t},\r\n\t_calculateAccelerometerData: function(model){\r\n\t\tvar ts = new Date().getTime();\r\n\t\tthis.accGravityZ = model.get('gravity').z;\r\n\t\tthis.accZ = model.get('z');\r\n\t\t// this.accLog.push({\r\n\t\t// \tts: ts,\r\n\t\t// \tz: this.accZ,\r\n\t\t// \tgZ: this.accGravityZ\r\n\t\t// });\r\n\t\tif (this.accTicks === 0) {\r\n\t\t\tthis.accSum41Start = ts;\r\n\t\t};\r\n\t\tthis.accGravityZAverage = (this.accGravityZAverage*this.accTicks+this.accGravityZ)/(this.accTicks+1)\r\n\t// start\r\n\t\tthis.accTicks++;\r\n\t\t// прибавляем текущее значение\r\n\t\tthis.accSum41 += this.accGravityZ;\r\n\t\t// вычитаем значение на начало периода\r\n\t\tthis.accSum41 -= this.accSum41StartValue;\r\n\t\tif (ts - this.accSum41Start > this.delay) {\r\n\t\t\t// сбрасываем стартовое время тика\r\n\t\t\tthis.accTicks = 0;\r\n\t\t\tthis.accSum41Start = ts;\r\n\t\t\t// сбрасываем стартовое значение\r\n\t\t\tthis.accSum41StartValue = this.accGravityZ;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonGetInfo: function() {\r\n\t\t$.get('//api.pearson.com/v2/dictionaries/ldoce5/entries?headword='+this.model.get('word')).success(response => {\r\n\t\t\tthis.triggerMethod('render:info',response)\r\n\t\t});\r\n\t},\r\n\tonRenderInfo : function(response) {\r\n\t\tif (response.status == 200) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.$el.find('.info').html('may be a <b>'+response.results[0].part_of_speech+'</b>')\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.$el.find('.info').text('not found');\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\t\r\n\t},\r\n\tonDestroy: function() {\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\tthis.doNotVibrate = true;\r\n\t\tstopVibrate();\r\n\t},\r\n\tonVibra: function() {\r\n\t\tstopVibrate();\r\n\t\tif (this.getOption('doNotVibrate') !== true) {\r\n\t\t\tvar tilt = app.model.get('gravity').z;\r\n\t\t\tvar vibroFrequencyModifier = Math.abs(tilt)-3;\r\n\t\t\t// [tilt 0..2]\r\n\t\t\t// 0 - rare\r\n\t\t\t// 2 - frequently\r\n\t\t\tif (Math.abs(tilt) < 6 && Math.abs(tilt) > 3) {\r\n\t\t\t\tdelay = 300 - vibroFrequencyModifier*100;\r\n\t\t\t\t// delay = delay < 100 ? 100 : delay;\r\n\t\t\t\tdelay = 100;\r\n\t\t\t\tduration = 10 + vibroFrequencyModifier*10;\r\n\t\t\t\tduration = duration > 50 ? 50 : duration;\r\n\t\t\t\tstartPeristentVibrate(duration, delay);\r\n\t\t\t}\r\n\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('vibra')\r\n\t\t\t},300)\r\n\t\t}\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar length = this.model.get('word').length;\r\n\t\tvar base = 1;\r\n\t\tvar width = $(document).width();\r\n\t\tvar k = width*0.8/length/16\r\n\t\tvar delta = k < 3 ? k : 3; \r\n\t\treturn {\r\n\t\t\tsize: base+delta\r\n\t\t}\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change': 'onGravityChange'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"correct\"]': 'correct',\r\n\t\t'click [data-action=\"pass\"]': 'pass',\r\n\t},\r\n\tonTriggered: function () {\r\n\t\tthis.triggered = true;\r\n\t\t_.delay(()=>{\r\n\t\t\tif (this.triggered == true) {\r\n\t\t\t\tif (this.accGravityZAverage > 0) {\r\n\t\t\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\t\t\tthis.triggerMethod('pass',this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\t\t\tthis.triggerMethod('correct',this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this.delay);\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tthis._calculateAccelerometerData(model);\r\n\t\tvar tilt = model.get('gravity').z;\r\n\t\tvar accelerateTilt = model.get('z');\r\n\t\tvar conditions = {\r\n\t\t\tvertical\t\t : Math.abs(tilt) < 3,\r\n\t\t\twarningVertical\t : Math.abs(tilt) < 6 && Math.abs(tilt) > 3,\r\n\t\t\t// BEGIN not in use\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt > 0.8,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt < -0.8,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt < -4,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt > 4,\r\n\t\t\t// END not in use\r\n\t\t\twordTrigger\t\t\t: Math.abs(tilt) > 5 && Math.abs(accelerateTilt) > 2\r\n\t\t};\r\n\t\tif (conditions.vertical) {\r\n\t\t\tthis.triggerMethod('normal:state')\r\n\t\t}\r\n\t\tif (app.timer.view.timer.pause !== true) {\r\n\t\t\tif (conditions.wordTrigger) {\r\n\t\t\t\tthis.triggerMethod('triggered');\r\n\t\t\t}\r\n\t\t\tif (conditions.warningVertical) {\r\n\t\t\t\tthis.triggerMethod('warning:state', tilt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t}\r\n\r\n\t},\r\n\tonNormalState: function() {\r\n\t\tthis.triggered = false;\r\n\t\tthis.$el.removeClass('warning');\r\n\t\tconsole.log('normal:state')\r\n\t\tstopVibrate();\r\n\t},\r\n\tonWarningState: function(tilt) {\r\n\t\tconsole.log('warning:state')\r\n\t\tthis.$el.addClass('warning');\r\n\t},\r\n\tonStartSwipeAnimation: function () {\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('swiped');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('next');\r\n\t\t\t},300);\r\n\t\t},300);\r\n\t},\r\n\tonDisableGuessing: function() {\r\n\t\t// disable accelerometer-way\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t// disable button-way\r\n\t\tthis.$el.find('[data-action]').attr('disabled','disabled');\r\n\t\t// disable vibra\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonPass: function() {\r\n\t\tplaySound('wrong');\r\n\t\tthis.$el.addClass('pass');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n\tonBeforeWordDissapearing: function() {\r\n\t\t\r\n\t},\r\n\tonPrev : function() {\r\n\t\tprevWordModel = app.history.last()\r\n\t},\r\n\tonCorrect: function() {\r\n\t\tplaySound('correct');\r\n\t\tthis.$el.addClass('correct');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n})\r\n\r\nwindow.Game = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());  "]}