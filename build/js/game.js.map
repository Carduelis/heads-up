{"version":3,"sources":["js/game.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","getName","this","dictionaryName","localRead","triggerMethod","onLoadDictionary","_this","console","log","success","dictionary","storeDictionary","$","alert","localSave","getOption","pickedWords","length","wordId","_","random","onDictionaryStored","onShowWord","view","Main","dataset","word","pickWord","getRegion","show","childviewEvents","app","rootView","correct","bindEvents","next","onPassWord","model","set","push","history","e","a","b","get","Backbone","Model","defaults","undefined","History","Collection","template","className","options","_this2","delay","accelerometerModelEvents","onGetInfo","_this3","response","onRenderInfo","status","$el","find","html","results","part_of_speech","text","onDestroy","doNotVibrate","stopVibrate","_this4","vibroFrequencyModifier","Math","abs","tilt","duration","startPeristentVibrate","templateContext","width","k","delta","change","triggers","size","click [data-action=\"pass\"]","_conditions","z","accelerateTilt","vertical","warningVertical","wordCorrect","onGravityChange","toFixed","conditions","wordIncorrect","onNormalState","onWarningState","_this5","addClass","onDisableGuessing","attr","onPass","playSound","onBeforeWordDissapearing","onPrev","last","onCorrect","window","Game","Entry"],"mappings":"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","file":"game.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tthis.dictionaryName = Dictionary.choosed.getName();\r\n\t\tif (localRead('dictionaryName') === this.dictionaryName) {\r\n\t\t\tthis.triggerMethod('dictionary:stored', localRead('dictionary'));\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('load:dictionary');\r\n\t\t}\r\n\t},\r\n\tonLoadDictionary: function() {\r\n\t\tconsole.log('onLoadDictionary');\r\n\t\t$.get('assets/dictionaries/'+this.dictionaryName+'.json').success(dictionary => {\r\n\t\t\tthis.triggerMethod('dictionary:stored', dictionary);\r\n\t\t\tthis.storeDictionary(dictionary);\r\n\t\t}).error(error => {\r\n\t\t\talert(\"Sorry, can't reach the dictionary. Try again or pick another one\");\r\n\t\t});\r\n\t},\r\n\tstoreDictionary: function(dictionary) {\r\n\t\tconsole.log('storeDictionary');\r\n\t\tlocalSave('dictionaryName',this.dictionaryName);\r\n\t\tlocalSave('dictionary',dictionary);\r\n\t},\r\n\tpickWord: function() {\r\n\t\t// to do \r\n\t\t// 1. trim dictionary (amount of words === seconds) \r\n\t\t// 2. shuffle trimmed dictionary\r\n\t\t// 3. pick next word \r\n\t\tvar dictionary = this.getOption('dictionary');\r\n\t\tvar pickedWords = this.getOption('pickedWords');\r\n\t\tvar length = dictionary.length;\r\n\t\tvar wordId = _.random(0,length-1);\r\n\t\twhile (typeof pickedWords[wordId] !== 'undefined') {\r\n\t\t\twordId = _.random(0,length-1);\r\n\t\t}\r\n\t\tpickedWords[wordId] = dictionary[wordId];\r\n\t\treturn dictionary[wordId]\r\n\t},\r\n\tonDictionaryStored: function(dictionary) {\r\n\t\tconsole.log('onDictionaryStored');\r\n\t\tthis.dictionary = dictionary;\r\n\t\tthis.pickedWords = {};\t\r\n\t\tthis.triggerMethod('show:word');\r\n\t},\r\n\tonShowWord: function() {\r\n\t\tthis.view = new Game.View.Main({\r\n\t\t\tdataset: {\r\n\t\t\t\tword: this.pickWord()\r\n\t\t\t}\r\n\t\t});\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t\tthis.bindEvents(this.view,this.childviewEvents);\r\n\t},\r\n\tchildviewEvents: {\r\n\t\t'pass' \t\t:\t'onPassWord',\r\n\t\t'correct'\t:\t'onCorrectWord',\r\n\t\t'next'\t\t:\t'onNext' \t\r\n\t},\r\n\tonPassWord: function(view) {\r\n\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',false);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonCorrectWord: function(view) {\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',true);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonNext: function (e,a,b) {\r\n\t\tif (app.timer.view.model.get('time') > 0) {\r\n\t\t\tthis.triggerMethod('show:word');\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nData.Main = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tword: 'Default Word',\r\n\t\t\tguessed: undefined\r\n\t\t}\r\n\t}\r\n});\r\nData.History = Backbone.Collection.extend({\r\n\tmodel: Data.Main,\r\n\tinitialize: function() {\r\n\r\n\t}\r\n});\r\n\r\n// word appears | vertical\r\n// word correct | tilted\r\n// word animated | tilted\r\n// word appears | tilted\r\n// word listen accelerometer \r\n\r\napp.history = new Data.History();\r\nView.Main = Marionette.View.extend({\r\n\ttemplate: '#t-main',\r\n\tclassName: 'game-content',\r\n\tinitialize: function(options) {\r\n\t\tthis.model = new Data.Main(options.dataset);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t},500);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.triggerMethod('vibra');\r\n\t\t},1500);\r\n\t\tthis.triggerMethod('get:info');\r\n\t},\r\n\tonGetInfo: function() {\r\n\t\t$.get('http://api.pearson.com/v2/dictionaries/ldoce5/entries?headword='+this.model.get('word')).success(response => {\r\n\t\t\tthis.triggerMethod('render:info',response)\r\n\t\t});\r\n\t},\r\n\tonRenderInfo : function(response) {\r\n\t\tif (response.status == 200) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.$el.find('.info').html('may be a <b>'+response.results[0].part_of_speech+'</b>')\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.$el.find('.info').text('not found');\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\t\r\n\t},\r\n\tonDestroy: function() {\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\tthis.doNotVibrate = true;\r\n\t\tstopVibrate();\r\n\t},\r\n\tonVibra: function() {\r\n\t\tstopVibrate();\r\n\t\tif (this.getOption('doNotVibrate') !== true) {\r\n\t\t\tvar tilt = app.model.get('gravity').z;\r\n\t\t\tvar vibroFrequencyModifier = Math.abs(tilt)-3;\r\n\t\t\t// [tilt 0..2]\r\n\t\t\t// 0 - rare\r\n\t\t\t// 2 - frequently\r\n\t\t\tif (Math.abs(tilt) < 6 && Math.abs(tilt) > 3) {\r\n\t\t\t\tdelay = 300 - vibroFrequencyModifier*100;\r\n\t\t\t\t// delay = delay < 100 ? 100 : delay;\r\n\t\t\t\tdelay = 100;\r\n\t\t\t\tduration = 10 + vibroFrequencyModifier*10;\r\n\t\t\t\tduration = duration > 50 ? 50 : duration;\r\n\t\t\t\tstartPeristentVibrate(duration, delay);\r\n\t\t\t}\r\n\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('vibra')\r\n\t\t\t},300)\r\n\t\t}\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar length = this.model.get('word').length;\r\n\t\tvar base = 1;\r\n\t\tvar width = $(document).width();\r\n\t\tvar k = width*0.8/length/16\r\n\t\tvar delta = k < 3 ? k : 3; \r\n\t\treturn {\r\n\t\t\tsize: base+delta\r\n\t\t}\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change': 'onGravityChange'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"correct\"]': 'correct',\r\n\t\t'click [data-action=\"pass\"]': 'pass',\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tvar tilt = model.get('gravity').z;\r\n\t\tvar accelerateTilt = model.get('z');\r\n\t\tvar conditions = {\r\n\t\t\tvertical\t\t : Math.abs(tilt) < 3,\r\n\t\t\twarningVertical\t : Math.abs(tilt) < 6 && Math.abs(tilt) > 3,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt > 0.8,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt < -0.8,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt < -4,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt > 4,\r\n\t\t};\r\n\t\t$('h2[data-action=\"navigate\"]').html('<span class=\"tilt\">'+tilt.toFixed(2)+'</span><span class=\"tilt-acc\">'+accelerateTilt.toFixed(2)+'</span>')\r\n\t\tif (conditions.vertical) {\r\n\t\t\tthis.triggerMethod('normal:state')\r\n\t\t}\r\n\t\tif (conditions.wordCorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('correct',this);\r\n\t\t}\r\n\t\tif (conditions.wordIncorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('pass',this);\r\n\t\t}\r\n\t\tif (conditions.warningVertical) {\r\n\t\t\tthis.triggerMethod('warning:state', tilt);\r\n\t\t}\r\n\t},\r\n\tonNormalState: function() {\r\n\t\tthis.$el.removeClass('warning');\r\n\t\tconsole.log('normal:state')\r\n\t\tstopVibrate();\r\n\t},\r\n\tonWarningState: function(tilt) {\r\n\t\tconsole.log('warning:state')\r\n\t\tthis.$el.addClass('warning');\r\n\t},\r\n\tonStartSwipeAnimation: function () {\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('swiped');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('next');\r\n\t\t\t},300);\r\n\t\t},300);\r\n\t},\r\n\tonDisableGuessing: function() {\r\n\t\t// disable accelerometer-way\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t// disable button-way\r\n\t\tthis.$el.find('[data-action]').attr('disabled','disabled');\r\n\t\t// disable vibra\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonPass: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(200);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(100);\r\n\t\t// },100)\r\n\t\tplaySound('wrong');\r\n\t\tthis.$el.addClass('pass');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n\tonBeforeWordDissapearing: function() {\r\n\t\t\r\n\t},\r\n\tonPrev : function() {\r\n\t\tprevWordModel = app.history.last()\r\n\t},\r\n\tonCorrect: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(100);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(200);\r\n\t\t// },100)\r\n\t\tplaySound('correct');\r\n\t\tthis.$el.addClass('correct');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n})\r\n\r\nwindow.Game = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"]}