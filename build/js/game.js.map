{"version":3,"sources":["js/game.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","this","triggerMethod","onGetDictionary","_this","localStorage","getItem","$","get","success","dictionary","pickWord","getOption","pickedWords","length","wordId","_","random","onDictionaryStored","onShowWord","view","Game","Main","dataset","word","app","rootView","getRegion","show","bindEvents","childviewEvents","pass","correct","next","onPassWord","console","log","model","set","history","push","onCorrectWord","onNext","e","a","b","timer","Backbone","Model","defaults","guessed","undefined","History","Collection","template","className","options","_this2","delay","accelerometerModelEvents","onBeforeDestoy","stopVibrate","doNotVibrate","onVibra","_this3","tilt","z","vibroFrequencyModifier","Math","abs","duration","startPeristentVibrate","templateContext","base","width","document","k","delta","size","change","triggers","click [data-action=\"correct\"]","click [data-action=\"pass\"]","onGravityChange","accelerateTilt","conditions","vertical","warningVertical","wordCorrect","wordIncorrect","onNormalState","$el","removeClass","onWarningState","addClass","onStartSwipeAnimation","_this4","onDisableGuessing","unbindEvents","find","attr","onPass","playSound","onBeforeWordDissapearing","onPrev","prevWordModel","last","onCorrect","window","Entry"],"mappings":"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","file":"js/game.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tthis.triggerMethod('get:dictionary');\r\n\t},\r\n\tonGetDictionary: function() {\r\n\t\tif(localStorage.getItem('dictionary')) {\r\n\t\t\tthis.triggerMethod('dictionary:stored',localStorage.getItem('dictionary'))\r\n\t\t} else {\r\n\t\t\t$.get('assets/great_noun_list.json').success(dictionary => {\r\n\t\t\t\tthis.triggerMethod('dictionary:stored', dictionary)\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\tpickWord: function() {\r\n\t\t// to do \r\n\t\t// 1. trim dictionary (amount of words === seconds) \r\n\t\t// 2. shuffle trimmed dictionary\r\n\t\t// 3. pick next word \r\n\t\tvar dictionary = this.getOption('dictionary');\r\n\t\tvar pickedWords = this.getOption('pickedWords');\r\n\t\tvar length = dictionary.length;\r\n\t\tvar wordId = _.random(0,length-1);\r\n\t\twhile (typeof pickedWords[wordId] !== 'undefined') {\r\n\t\t\twordId = _.random(0,length-1);\r\n\t\t}\r\n\t\tpickedWords[wordId] = dictionary[wordId];\r\n\t\treturn dictionary[wordId]\r\n\t},\r\n\tonDictionaryStored: function(dictionary) {\r\n\t\tthis.dictionary = dictionary;\r\n\t\tthis.pickedWords = {};\t\r\n\t\tthis.triggerMethod('show:word');\r\n\t},\r\n\tonShowWord: function() {\r\n\t\tthis.view = new Game.View.Main({\r\n\t\t\tdataset: {\r\n\t\t\t\tword: this.pickWord()\r\n\t\t\t}\r\n\t\t});\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t\tthis.bindEvents(this.view,this.childviewEvents);\r\n\t},\r\n\tchildviewEvents: {\r\n\t\t'pass' \t\t:\t'onPassWord',\r\n\t\t'correct'\t:\t'onCorrectWord',\r\n\t\t'next'\t\t:\t'onNext' \t\r\n\t},\r\n\tonPassWord: function(view) {\r\n\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',false);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonCorrectWord: function(view) {\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',true);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonNext: function (e,a,b) {\r\n\t\tif (app.timer.view.model.get('time') > 0) {\r\n\t\t\tthis.triggerMethod('show:word');\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nData.Main = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tword: 'Default Word',\r\n\t\t\tguessed: undefined\r\n\t\t}\r\n\t}\r\n});\r\nData.History = Backbone.Collection.extend({\r\n\tmodel: Data.Main,\r\n\tinitialize: function() {\r\n\r\n\t}\r\n});\r\n\r\n// word appears | vertical\r\n// word correct | tilted\r\n// word animated | tilted\r\n// word appears | tilted\r\n// word listen accelerometer \r\n\r\napp.history = new Data.History();\r\nView.Main = Marionette.View.extend({\r\n\ttemplate: '#t-main',\r\n\tclassName: 'game-content',\r\n\tinitialize: function(options) {\r\n\t\tthis.model = new Data.Main(options.dataset);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t},500);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.triggerMethod('vibra');\r\n\t\t},1500);\r\n\t},\r\n\tonBeforeDestoy: function() {\r\n\t\tstopVibrate();\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonVibra: function() {\r\n\t\tstopVibrate();\r\n\t\tif (this.getOption('doNotVibrate') !== true) {\r\n\t\t\tvar tilt = app.model.get('gravity').z;\r\n\t\t\tvar vibroFrequencyModifier = Math.abs(tilt)-3;\r\n\t\t\t// [tilt 0..2]\r\n\t\t\t// 0 - rare\r\n\t\t\t// 2 - frequently\r\n\t\t\tif (Math.abs(tilt) < 6 && Math.abs(tilt) > 3) {\r\n\t\t\t\tdelay = 300 - vibroFrequencyModifier*100;\r\n\t\t\t\t// delay = delay < 100 ? 100 : delay;\r\n\t\t\t\tdelay = 100;\r\n\t\t\t\tduration = 10 + vibroFrequencyModifier*10;\r\n\t\t\t\tduration = duration > 50 ? 50 : duration;\r\n\t\t\t\tstartPeristentVibrate(duration, delay);\r\n\t\t\t}\r\n\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('vibra')\r\n\t\t\t},300)\r\n\t\t}\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar length = this.model.get('word').length;\r\n\t\tvar base = 1;\r\n\t\tvar width = $(document).width();\r\n\t\tvar k = width*0.8/length/16\r\n\t\tvar delta = k < 3 ? k : 3; \r\n\t\treturn {\r\n\t\t\tsize: base+delta\r\n\t\t}\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change': 'onGravityChange'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"correct\"]': 'correct',\r\n\t\t'click [data-action=\"pass\"]': 'pass',\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tvar tilt = model.get('gravity').z;\r\n\t\tvar accelerateTilt = model.get('z');\r\n\t\tvar conditions = {\r\n\t\t\tvertical\t\t : Math.abs(tilt) < 3,\r\n\t\t\twarningVertical\t : Math.abs(tilt) < 6 && Math.abs(tilt) > 3,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt > 0.8,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt < -0.8,\r\n\t\t};\r\n\r\n\t\tif (conditions.vertical) {\r\n\t\t\tthis.triggerMethod('normal:state')\r\n\t\t}\r\n\t\tif (conditions.wordCorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('correct',this);\r\n\t\t}\r\n\t\tif (conditions.wordIncorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('pass',this);\r\n\t\t}\r\n\t\tif (conditions.warningVertical) {\r\n\t\t\tthis.triggerMethod('warning:state', tilt);\r\n\t\t}\r\n\t},\r\n\tonNormalState: function() {\r\n\t\tthis.$el.removeClass('warning');\r\n\t\tconsole.log('normal:state')\r\n\t\tstopVibrate();\r\n\t},\r\n\tonWarningState: function(tilt) {\r\n\t\tconsole.log('warning:state')\r\n\t\tthis.$el.addClass('warning');\r\n\t},\r\n\tonStartSwipeAnimation: function () {\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('swiped');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('next');\r\n\t\t\t},300);\r\n\t\t},300);\r\n\t},\r\n\tonDisableGuessing: function() {\r\n\t\t// disable accelerometer-way\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t// disable button-way\r\n\t\tthis.$el.find('[data-action]').attr('disabled','disabled');\r\n\t\t// disable vibra\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonPass: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(200);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(100);\r\n\t\t// },100)\r\n\t\tplaySound('wrong');\r\n\t\tthis.$el.addClass('pass');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n\tonBeforeWordDissapearing: function() {\r\n\t\t\r\n\t},\r\n\tonPrev : function() {\r\n\t\tprevWordModel = app.history.last()\r\n\t},\r\n\tonCorrect: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(100);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(200);\r\n\t\t// },100)\r\n\t\tplaySound('correct');\r\n\t\tthis.$el.addClass('correct');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n})\r\n\r\nwindow.Game = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"],"sourceRoot":"/source/"}