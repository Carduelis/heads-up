{"version":3,"sources":["js/game.js"],"names":["Data","View","EntryPoint","Marionette","Object","extend","initialize","getName","this","dictionaryName","localRead","triggerMethod","onLoadDictionary","_this","console","log","success","dictionary","storeDictionary","$","alert","localSave","getOption","pickedWords","length","wordId","_","random","onDictionaryStored","onShowWord","view","Main","dataset","word","pickWord","getRegion","show","childviewEvents","app","rootView","correct","bindEvents","next","onPassWord","model","set","push","history","e","a","b","get","Backbone","Model","defaults","undefined","History","Collection","template","className","accZ","accLog","accSum41","accSum41Start","accSum41StartValue","accGravityZ","accGravityZHistory","accGravityZAverage","accTicks","options","_this2","delay","accelerometerModelEvents","_calculateAccelerometerData","ts","getTime","z","gZ","html","toFixed","onGetInfo","_this3","response","$el","find","results","part_of_speech","onRenderInfo","status","text","error","unbindEvents","doNotVibrate","stopVibrate","onVibra","tilt","Math","abs","duration","vibroFrequencyModifier","startPeristentVibrate","templateContext","base","width","document","k","delta","size","change","click [data-action=\"correct\"]","click [data-action=\"pass\"]","onGravityChange","_conditions","triggers","accelerateTilt","conditions","vertical","wordCorrect","wordIncorrect","_defineProperty","onNormalState","removeClass","onStartSwipeAnimation","_this5","onWarningState","attr","onPass","playSound","addClass","onBeforeWordDissapearing","onPrev","prevWordModel","last","onCorrect","window","Game","Entry"],"mappings":"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","file":"game.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tthis.dictionaryName = Dictionary.choosed.getName();\r\n\t\tif (localRead('dictionaryName') === this.dictionaryName) {\r\n\t\t\tthis.triggerMethod('dictionary:stored', localRead('dictionary'));\r\n\t\t} else {\r\n\t\t\tthis.triggerMethod('load:dictionary');\r\n\t\t}\r\n\t},\r\n\tonLoadDictionary: function() {\r\n\t\tconsole.log('onLoadDictionary');\r\n\t\t$.get('assets/dictionaries/'+this.dictionaryName+'.json').success(dictionary => {\r\n\t\t\tthis.triggerMethod('dictionary:stored', dictionary);\r\n\t\t\tthis.storeDictionary(dictionary);\r\n\t\t}).error(error => {\r\n\t\t\talert(\"Sorry, can't reach the dictionary. Try again or pick another one\");\r\n\t\t});\r\n\t},\r\n\tstoreDictionary: function(dictionary) {\r\n\t\tconsole.log('storeDictionary');\r\n\t\tlocalSave('dictionaryName',this.dictionaryName);\r\n\t\tlocalSave('dictionary',dictionary);\r\n\t},\r\n\tpickWord: function() {\r\n\t\t// to do \r\n\t\t// 1. trim dictionary (amount of words === seconds) \r\n\t\t// 2. shuffle trimmed dictionary\r\n\t\t// 3. pick next word \r\n\t\tvar dictionary = this.getOption('dictionary');\r\n\t\tvar pickedWords = this.getOption('pickedWords');\r\n\t\tvar length = dictionary.length;\r\n\t\tvar wordId = _.random(0,length-1);\r\n\t\twhile (typeof pickedWords[wordId] !== 'undefined') {\r\n\t\t\twordId = _.random(0,length-1);\r\n\t\t}\r\n\t\tpickedWords[wordId] = dictionary[wordId];\r\n\t\treturn dictionary[wordId]\r\n\t},\r\n\tonDictionaryStored: function(dictionary) {\r\n\t\tconsole.log('onDictionaryStored');\r\n\t\tthis.dictionary = dictionary;\r\n\t\tthis.pickedWords = {};\t\r\n\t\tthis.triggerMethod('show:word');\r\n\t},\r\n\tonShowWord: function() {\r\n\t\tthis.view = new Game.View.Main({\r\n\t\t\tdataset: {\r\n\t\t\t\tword: this.pickWord()\r\n\t\t\t}\r\n\t\t});\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t\tthis.bindEvents(this.view,this.childviewEvents);\r\n\t},\r\n\tchildviewEvents: {\r\n\t\t'pass' \t\t:\t'onPassWord',\r\n\t\t'correct'\t:\t'onCorrectWord',\r\n\t\t'next'\t\t:\t'onNext' \t\r\n\t},\r\n\tonPassWord: function(view) {\r\n\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',false);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonCorrectWord: function(view) {\r\n\t\tconsole.log(view);\r\n\t\tview.model.set('guessed',true);\r\n\t\tapp.history.push(view.model);\r\n\t},\r\n\tonNext: function (e,a,b) {\r\n\t\tif (app.timer.view.model.get('time') > 0) {\r\n\t\t\tthis.triggerMethod('show:word');\r\n\t\t}\r\n\r\n\t}\r\n})\r\n\r\nData.Main = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\tword: 'Default Word',\r\n\t\t\tguessed: undefined\r\n\t\t}\r\n\t}\r\n});\r\nData.History = Backbone.Collection.extend({\r\n\tmodel: Data.Main,\r\n\tinitialize: function() {\r\n\r\n\t}\r\n});\r\n\r\n// word appears | vertical\r\n// word correct | tilted\r\n// word animated | tilted\r\n// word appears | tilted\r\n// word listen accelerometer \r\n\r\napp.history = new Data.History();\r\nView.Main = Marionette.View.extend({\r\n\ttemplate: '#t-main',\r\n\tclassName: 'game-content',\r\n\taccZ: 0,\r\n\taccLog: [],\r\n\taccSum41: 0,\r\n\taccSum41Start: 0,\r\n\taccSum41StartValue: 0,\r\n\taccGravityZ: 0,\r\n\taccGravityZHistory: {},\r\n\taccGravityZAverage: 0,\r\n\taccTicks: 0,\r\n\tinitialize: function(options) {\r\n\t\tthis.model = new Data.Main(options.dataset);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t},500);\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.triggerMethod('vibra');\r\n\t\t},1500);\r\n\t\tthis.triggerMethod('get:info');\r\n\t},\r\n\t_calculateAccelerometerData: function(model){\r\n\t\tvar ts = new Date().getTime();\r\n\t\tthis.accGravityZ = model.get('gravity').z;\r\n\t\tthis.accZ = model.get('z');\r\n\t\tthis.accLog.push({\r\n\t\t\tts: ts,\r\n\t\t\tz: this.accZ,\r\n\t\t\tgZ: this.accGravityZ\r\n\t\t});\r\n\t\tif (this.accTicks === 0) {\r\n\t\t\tthis.accSum41Start = ts;\r\n\t\t};\r\n\t\tthis.accGravityZAverage = (this.accGravityZAverage*this.accTicks+this.accGravityZ)/(this.accTicks+1)\r\n\t// start\r\n\t\tthis.accTicks++;\r\n\t\t// прибавляем текущее значение\r\n\t\tthis.accSum41 += this.accGravityZ;\r\n\t\t// вычитаем значение на начало периода\r\n\t\tthis.accSum41 -= this.accSum41StartValue;\r\n\t\tif (ts - this.accSum41Start > 200) {\r\n\t\t\t// сбрасываем стартовое время тика\r\n\t\t\tthis.accTicks = 0;\r\n\t\t\tthis.accSum41Start = ts;\r\n\t\t\t// сбрасываем стартовое значение\r\n\t\t\tthis.accSum41StartValue = this.accGravityZ;\r\n\t\t}\r\n\r\n\t// end\t\r\n\t\t// if (Math.abs(this.accelerometerGravityZ) > 6) {\r\n\t\t// \tfor (var t in this.accelerometerGravityZHistory) {\r\n\t\t// \t\tlet timeHistoryDelta = ts-t;\r\n\t\t// \t\tif (timeHistoryDelta < 100) {\r\n\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tvar html = '<span class=\"tilt\">';\r\n\t\t\thtml+= this.accGravityZ.toFixed(2);\r\n\t\t\thtml+= '</span><span class=\"tilt\">';\r\n\t\t\thtml+= this.accTicks;\r\n\t\t\thtml+= '</span><span class=\"tilt\">';\r\n\t\t\thtml+= this.accSum41.toFixed(2);\r\n\t\t\thtml+= '</span><span class=\"tilt\">';\r\n\t\t\thtml+= (this.accGravityZAverage).toFixed(2);\r\n\t\t\thtml+= '</span>';\r\n\t\t// $('h2[data-action=\"navigate\"]').html(html)\r\n\t},\r\n\r\n\r\n\tonGetInfo: function() {\r\n\t\t$.get('http://api.pearson.com/v2/dictionaries/ldoce5/entries?headword='+this.model.get('word')).success(response => {\r\n\t\t\tthis.triggerMethod('render:info',response)\r\n\t\t});\r\n\t},\r\n\tonRenderInfo : function(response) {\r\n\t\tif (response.status == 200) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.$el.find('.info').html('may be a <b>'+response.results[0].part_of_speech+'</b>')\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.$el.find('.info').text('not found');\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t}\t\r\n\t},\r\n\tonDestroy: function() {\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\tthis.doNotVibrate = true;\r\n\t\tstopVibrate();\r\n\t},\r\n\tonVibra: function() {\r\n\t\tstopVibrate();\r\n\t\tif (this.getOption('doNotVibrate') !== true) {\r\n\t\t\tvar tilt = app.model.get('gravity').z;\r\n\t\t\tvar vibroFrequencyModifier = Math.abs(tilt)-3;\r\n\t\t\t// [tilt 0..2]\r\n\t\t\t// 0 - rare\r\n\t\t\t// 2 - frequently\r\n\t\t\tif (Math.abs(tilt) < 6 && Math.abs(tilt) > 3) {\r\n\t\t\t\tdelay = 300 - vibroFrequencyModifier*100;\r\n\t\t\t\t// delay = delay < 100 ? 100 : delay;\r\n\t\t\t\tdelay = 100;\r\n\t\t\t\tduration = 10 + vibroFrequencyModifier*10;\r\n\t\t\t\tduration = duration > 50 ? 50 : duration;\r\n\t\t\t\tstartPeristentVibrate(duration, delay);\r\n\t\t\t}\r\n\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('vibra')\r\n\t\t\t},300)\r\n\t\t}\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\tvar length = this.model.get('word').length;\r\n\t\tvar base = 1;\r\n\t\tvar width = $(document).width();\r\n\t\tvar k = width*0.8/length/16\r\n\t\tvar delta = k < 3 ? k : 3; \r\n\t\treturn {\r\n\t\t\tsize: base+delta\r\n\t\t}\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change': 'onGravityChange'\r\n\t},\r\n\ttriggers: {\r\n\t\t'click [data-action=\"correct\"]': 'correct',\r\n\t\t'click [data-action=\"pass\"]': 'pass',\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tthis._calculateAccelerometerData(model);\r\n\t\tvar tilt = model.get('gravity').z;\r\n\t\tvar accelerateTilt = model.get('z');\r\n\t\tvar conditions = {\r\n\t\t\tvertical\t\t : Math.abs(tilt) < 3,\r\n\t\t\twarningVertical\t : Math.abs(tilt) < 6 && Math.abs(tilt) > 3,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt > 0.8,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt < -0.8,\r\n\t\t\twordCorrect\t\t : tilt < -6 && accelerateTilt < -4,\r\n\t\t\twordIncorrect\t : tilt > 6 && accelerateTilt > 4,\r\n\t\t};\r\n\t\tif (conditions.vertical) {\r\n\t\t\tthis.triggerMethod('normal:state')\r\n\t\t}\r\n\t\tif (conditions.wordCorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('correct',this);\r\n\t\t}\r\n\t\tif (conditions.wordIncorrect) {\r\n\t\t\tthis.triggerMethod('normal:state');\r\n\t\t\tthis.triggerMethod('pass',this);\r\n\t\t}\r\n\t\tif (conditions.warningVertical) {\r\n\t\t\tthis.triggerMethod('warning:state', tilt);\r\n\t\t}\r\n\r\n\t\t// $('h2[data-action=\"navigate\"]').html('<small class=\"sum tilt\">'+this.accelerometerGravityZ.toFixed(2)+'</small> &nbsp; <small class=\"sum tilt\">'+this.accelerometerZ.toFixed(2)+'</small><small class=\"tilt\">'+this.accelerometerGravityZ.toFixed(2)+'</small><small class=\"tilt-acc\">'+this.accelerometerZ.toFixed(2)+'</small>')\r\n\t\r\n\t},\r\n\tonNormalState: function() {\r\n\t\tthis.$el.removeClass('warning');\r\n\t\tconsole.log('normal:state')\r\n\t\tstopVibrate();\r\n\t},\r\n\tonWarningState: function(tilt) {\r\n\t\tconsole.log('warning:state')\r\n\t\tthis.$el.addClass('warning');\r\n\t},\r\n\tonStartSwipeAnimation: function () {\r\n\t\t_.delay(()=>{\r\n\t\t\tthis.$el.addClass('swiped');\r\n\t\t\t_.delay(()=>{\r\n\t\t\t\tthis.triggerMethod('next');\r\n\t\t\t},300);\r\n\t\t},300);\r\n\t},\r\n\tonDisableGuessing: function() {\r\n\t\t// disable accelerometer-way\r\n\t\tthis.unbindEvents(app.model,this.accelerometerModelEvents);\r\n\t\t// disable button-way\r\n\t\tthis.$el.find('[data-action]').attr('disabled','disabled');\r\n\t\t// disable vibra\r\n\t\tthis.doNotVibrate = true;\r\n\t},\r\n\tonPass: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(200);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(100);\r\n\t\t// },100)\r\n\t\tplaySound('wrong');\r\n\t\tthis.$el.addClass('pass');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n\tonBeforeWordDissapearing: function() {\r\n\t\t\r\n\t},\r\n\tonPrev : function() {\r\n\t\tprevWordModel = app.history.last()\r\n\t},\r\n\tonCorrect: function() {\r\n\t\t// stopVibrate();\r\n\t\t// startVibrate(100);\r\n\t\t// _.delay(()=>{\r\n\t\t// \tstartVibrate(200);\r\n\t\t// },100)\r\n\t\tplaySound('correct');\r\n\t\tthis.$el.addClass('correct');\r\n\t\tthis.triggerMethod('disable:guessing');\r\n\r\n\t\tthis.triggerMethod('start:swipe:animation');\r\n\t},\r\n})\r\n\r\nwindow.Game = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"]}