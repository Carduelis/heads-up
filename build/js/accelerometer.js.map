{"version":3,"sources":["js/accelerometer.js"],"names":["Data","View","GraphHolder","Marionette","extend","template","className","RegionSetter","regions","onRender","show","Graph_gravity","this","getRegion","options","initialize","cid","onAttach","chart","CanvasJS","Chart","chartContainerId","title","data","type","dps","xVal","yVal","dataLength","updateChart","count","j","app","z","x","length","render","on","templateContext","text","dataPoints","get","y","Object","_this","$","triggerMethod","onStart","window","Entry"],"mappings":"CAAC,WACD,GAAAA,MAAAC,IAEAA,GAAKC,YAAcC,WAAWF,KAAKG,QAAnCH,SAAKC,0BACJG,UAAU,uBACVC,QAAAA,GAAWC,cAAA,UAF8B,UAGzCC,SAAS,WACTC,KAAAA,UAAU,WAAAC,KAAW,GAAAT,GAAAU,eACpBC,KAAAC,UAAA,UAAAH,KAA0BA,GAAKT,GAAIA,iBALKA,EAA1CU,cAAAR,WAAAF,KAAAG,QASAH,SAAKU,mBACJN,UAAU,sBACVC,WAAW,SAAAQ,GACXC,KAAAA,iBAAY,kBAAkBH,KAAAI,KAE7BC,SAL0C,WAM3CA,GAAAA,MAGKC,EAAQ,GAAIC,UAASC,MAAMR,KAAKS,kBAApCC,OACCA,KAAAA,oBAAOC,OAGPA,KAAM,OACLC,WAAMC,MAKJC,EAAO,EAAXC,EAAID,EACJE,EAAA,IAGIC,EAAc,SAAUC,GAA5BA,EAAID,GAAAA,CAIH,KAAK,GAAIE,GAAI,EAAGA,EAAID,EAAOC,IAA3BJ,EAAKK,IAAID,MAAOA,IAAID,WAAYG,EAC/BN,EAAAA,MACAF,EAAAA,EACCS,EAAAA,IADQR,GAKTD,GAAAU,OAAAP,GACDH,EAAIA,QAIJP,EAAMkB,SAKPP,GAAAA,GAGAG,IAAAA,MAAAK,GAAA,SAAA,WACCR,OAGFS,gBAAAA,WACC,OACCjB,iBAAAA,KAAkBA,qBAIrBpB,EAAAA,aAAAE,WAAoBA,KAAAC,QACnBC,SAAAA,mBACAC,UAAAA,sBACAS,WAAAA,SAAYD,GACXF,KAAAS,iBAAA,kBAAwBT,KAAkBI,KAE3CC,SAAAA,WACC,GAAAQ,MAEAP,EAAIA,GAAQC,UAAIA,MAAJP,KAAmBS,kBAC9BC,OACCiB,KAAAA,oBAEDhB,OACCC,KAAAA,OACAgB,WAAAA,MAIFd,EAAIA,EACJC,EAAIA,EACJC,EAAIA,IAEJC,EAAIA,SAAAA,GACHC,EAAAA,GAAQA,CAGR,KAAA,GAAKC,GAAIA,EAATA,EAAgBA,EAAhBA,IACCJ,EAAAA,IAAOK,MAAAS,IAAA,KACPhB,EAAAA,MACCS,EAAAA,EACAQ,EAAAA,IAEDhB,GAEDD,GAAIA,OAAAG,GACHH,EAAAA,QAGDP,EAAAA,SAKDW,GAAYD,GAIXC,IAAAA,MAAAA,GAAAA,SAAAA,WACAA,OAGDS,gBAAO,WACNjB,OADMA,iBAAPT,KAAAS,oBAMDN,IAAAA,GAAYZ,WAAAwC,OAAAvC,QAAWW,WAAA,WAAA,GAAA6B,GAAAhC,IAEtBiC,GAAAA,UAAA,oDAAA,WACCD,EAAAE,cAAKA,YAGPC,QAAAA,WACCf,IAAAA,SAAAnB,UAAA,QAAAH,KAAA,GAAoCT,GAAIA,eAG1C+C,QAAAA,eACC/C,KAAAA,EACAD,KAAAA,EACAiD,MAAAA","file":"accelerometer.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\nView.GraphHolder = Marionette.View.extend({\r\n\ttemplate: '#t-accelerometer-holder',\r\n\tclassName: 'accelerometer-holder',\r\n\tregions: new RegionSetter('gravity','source'),\r\n\tonRender: function() {\r\n\t\tthis.getRegion('gravity').show(new View.Graph_gravity);\r\n\t\tthis.getRegion('source').show(new View.Graph_source);\r\n\t}\r\n});\r\nView.Graph_gravity = Marionette.View.extend({\r\n\ttemplate: '#t-accelerometer',\r\n\tclassName: 'accelerometer-chart',\r\n\tinitialize: function(options) {\r\n\t\tthis.chartContainerId = \"chartContainer-\"+this.cid;\r\n\t},\r\n\tonAttach: function() {\r\n\t\tvar dps = []; // dataPoints\r\n\r\n\t\tvar chart = new CanvasJS.Chart(this.chartContainerId,{\r\n\t\t\ttitle :{\r\n\t\t\t\ttext: \"Live Random Data\"\r\n\t\t\t},\t\t\t\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints: dps \r\n\t\t\t}]\r\n\t\t});\r\n\r\n\t\tvar xVal = 0;\r\n\t\tvar yVal = 0;\r\n\t\tvar dataLength = 500; // number of dataPoints visible at any point\r\n\r\n\t\tvar updateChart = function (count) {\r\n\t\t\tcount = count || 1;\r\n\t\t\t// count is number of times loop runs to generate random dataPoints.\r\n\t\t\t\r\n\t\t\tfor (var j = 0; j < count; j++) {\t\r\n\t\t\t\tyVal = app.model.get('gravity').z;\r\n\t\t\t\tdps.push({\r\n\t\t\t\t\tx: xVal,\r\n\t\t\t\t\ty: yVal\r\n\t\t\t\t});\r\n\t\t\t\txVal++;\r\n\t\t\t};\r\n\t\t\tif (dps.length > dataLength) {\r\n\t\t\t\tdps.shift();\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchart.render();\t\t\r\n\r\n\t\t};\r\n\r\n\t\t// generates first set of dataPoints\r\n\t\tupdateChart(dataLength); \r\n\r\n\t\t// update chart after specified time. \r\n\t\tapp.model.on('change', function(){\r\n\t\t\tupdateChart()\r\n\t\t});\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\treturn {\r\n\t\t\tchartContainerId: this.chartContainerId\r\n\t\t}\r\n\t}\r\n});\r\nView.Graph_source = Marionette.View.extend({\r\n\ttemplate: '#t-accelerometer',\r\n\tclassName: 'accelerometer-chart',\r\n\tinitialize: function(options) {\r\n\t\tthis.chartContainerId = \"chartContainer-\"+this.cid;\r\n\t},\r\n\tonAttach: function() {\r\n\t\tvar dps = []; // dataPoints\r\n\r\n\t\tvar chart = new CanvasJS.Chart(this.chartContainerId,{\r\n\t\t\ttitle :{\r\n\t\t\t\ttext: \"Live Random Data\"\r\n\t\t\t},\t\t\t\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints: dps \r\n\t\t\t}]\r\n\t\t});\r\n\r\n\t\tvar xVal = 0;\r\n\t\tvar yVal = 0;\r\n\t\tvar dataLength = 500; // number of dataPoints visible at any point\r\n\r\n\t\tvar updateChart = function (count) {\r\n\t\t\tcount = count || 1;\r\n\t\t\t// count is number of times loop runs to generate random dataPoints.\r\n\t\t\t\r\n\t\t\tfor (var j = 0; j < count; j++) {\t\r\n\t\t\t\tyVal = app.model.get('z');\r\n\t\t\t\tdps.push({\r\n\t\t\t\t\tx: xVal,\r\n\t\t\t\t\ty: yVal\r\n\t\t\t\t});\r\n\t\t\t\txVal++;\r\n\t\t\t};\r\n\t\t\tif (dps.length > dataLength) {\r\n\t\t\t\tdps.shift();\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tchart.render();\t\t\r\n\r\n\t\t};\r\n\r\n\t\t// generates first set of dataPoints\r\n\t\tupdateChart(dataLength); \r\n\r\n\t\t// update chart after specified time. \r\n\t\tapp.model.on('change', function(){\r\n\t\t\tupdateChart()\r\n\t\t});\r\n\t},\r\n\ttemplateContext: function() {\r\n\t\treturn {\r\n\t\t\tchartContainerId: this.chartContainerId\r\n\t\t}\r\n\t}\r\n});\r\nvar EntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\r\n\t\t$.getScript('http://canvasjs.com/assets/script/canvasjs.min.js', ()=>{\r\n\t\t\tthis.triggerMethod('start');\r\n\t\t});\r\n\t},\r\n\tonStart: function() {\r\n\t\tapp.rootView.getRegion('test').show(new View.GraphHolder());\r\n\t}\r\n});\r\nwindow.Accelerometer = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"]}