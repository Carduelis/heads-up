{"version":3,"sources":["js/setup.js"],"names":["Data","View","initialize","Object","extend","configGetter","this","onConfigGetted","config","localSave","settings","app","rootView","getRegion","show","view","defaults","Backbone","Model","title","type","description","options","measure","disabledState","value","model","Setting","template","Marionette","className","regions","RegionSetter","lsChannel","on","render","console","warn","onRender","off","dataset","settingListView","Settings","events","input .form-control","onInput","e","log","currentTarget","onChange","set","checked","trigger","attributes","CollectionView","childView","collection","accelerometerModelEvents","collectionEvents","onModelChange","onGravityChange","models","y","x","abs","Math","get","transform","$el","css","window","Setup","Entry","EntryPoint"],"mappings":"CAAC,WACD,GAAAA,MAAAC,IAKCC,YAAAA,WAAYC,OAAAC,QACXC,WAAAA,WACAA,aAHoCC,KAAAC,iBAKpCA,eAAc,SAATC,GACJC,SAAU,aACVA,UAAA,WAAAD,EAAAE,UAEDC,KAAIC,KAAAA,GAASC,GAAAA,gBACbF,IAAAC,SAAAC,UAAA,WAAAC,KAAAR,KAAAS,SAIDC,EAAAA,QAAUC,SAAAC,MAAAd,QACTY,SAAO,WACNG,OACAC,MAAM,sBACNC,KAAAA,OACAC,YAAS,KACTC,QAAAA,KACAC,QAAAA,KACAC,cAAO,WAPDA,MAAP,SAYDC,EAAAA,SAAYC,SAAAA,WAAAA,QAD8BD,MAA3C1B,EAAA2B,UAICC,EAAAA,gBAD6CC,WAAA5B,KAAAG,QAE7C0B,SAAAA,WACAC,UAAS,wBACT7B,QAAAA,GAAY8B,cAAA,QACXC,WAAUC,SAAGZ,GAEbW,UAP4CC,GAAA,qBAAA5B,KAAA6B,SAU5CF,UAAAA,WACAG,QAX4CC,KAAA,OAY7CC,UAAUC,IAAA,uBAERC,SAAAA,WADuC,GAAxCC,GAAA,GAAAxC,GAAAyC,UAGAF,QAAK3B,UAAU,aAhBMP,MAAvBO,UAAA,QAAAC,KAAA2B,MAsBCX,EAAAA,YAAWD,WAAA5B,KAAAG,QACXuC,SAAQ,kBACPb,UAAA,qCACAa,QAFOC,sBAHiC,UAOzCC,wCAAqB,YAEpBA,QAAKnB,SAAUoB,GACfV,QAVwCW,IAAAD,EAAAE,cAAAvB,OAWzCwB,KAAAA,MAAUC,IAAA,QAAAJ,EAAAE,cAAYvB,QAErBQ,SAAAA,SAAAa,GACAxC,KAAAoB,MAAAwB,IAAA,QAAAJ,EAAAE,cAAAG,SAdiBlB,UAAnBmB,QAAA,qBAAA9C,KAAAoB,MAAA2B,eAkBCvB,EAAAA,SAAWD,WAAAyB,eAFqClD,QAGhDmD,QAAAA,KACArD,UAAAA,yBACCqD,UAAKC,EAAAA,YACLpB,WAAQW,SAASS,GACjBlD,KAAAkD,WAAgB7C,GAAIe,GAApBgB,SAA+Be,EAAAA,SAC/BrB,QAR+CW,IAAAzC,KAAAkD,YAShDE,KAAAA,WAAAA,IAAkBhC,MAAApB,KAAAmD,2BAAAC,kBAGlBD,OAAAA,iBAA0BA,0BAG1BE,OAAAA,mBAEClD,cAAU,WACV2B,QAlB+CW,IAAA,SAmBhDa,UAAAA,WAAiBtD,KAAAkD,WAAAK,SAEhBC,gBAAc,SAAVpC,GACJqC,EAAI,EAAJrC,EAASsC,IAAID,WAATA,EAAsBE,EACzBH,EAAa,GAAbpC,EAAAwC,IAAA,WAAaJ,EAAA,EACZK,KAAAA,IAAAA,GAAW,GAAA,GAAAF,KAAeF,IAAED,GAAA,MADhBxD,KAAb8D,IAAAC,KAKAF,UAAA,eAAAJ,EAAA,OAAAD,EAAA,aAKYQ,OAAfC,OAvGCtE,KAADA,EAyGCD,KAAMA,EACNwE,MAAOC","file":"setup.js","sourcesContent":["(function(){\r\nvar Data = {}, View = {};\r\n\r\n\r\n\r\nEntryPoint = Marionette.Object.extend({\r\n\tinitialize: function() {\r\n\t\tconfigGetter(this.onConfigGetted)\r\n\t},\r\n\tonConfigGetted: function (config) {\r\n\t\tif (!localHas('settings')) {\r\n\t\t\tlocalSave('settings',config.settings);\r\n\t\t}\r\n\t\tthis.view = new View.SettingsWrapper();\r\n\t\tapp.rootView.getRegion('content').show(this.view);\r\n\t}\r\n});\r\n\r\nData.Setting = Backbone.Model.extend({\r\n\tdefaults: function() {\r\n\t\treturn {\r\n\t\t\ttitle: 'Заголовок настройки',\r\n\t\t\ttype: 'text',\r\n\t\t\tdescription: null,\r\n\t\t\toptions: null,\r\n\t\t\tmeasure: null,\r\n\t\t\tdisabledState: 'disabled',\r\n\t\t\tvalue: null,\r\n\t\t}\r\n\t}\r\n});\r\nData.Settings = Backbone.Collection.extend({\r\n\tmodel: Data.Setting,\r\n});\r\nView.SettingsWrapper = Marionette.View.extend({\r\n\ttemplate: '#t-setup',\r\n\tclassName: 'container navibar-pad',\r\n\tregions: new RegionSetter('list'),\r\n\tinitialize: function(options) {\r\n\t\tlsChannel.on('sound:save:success', this.render);\r\n\t\t\r\n\t},\r\n\tonDestroy: function() {\r\n\t\tconsole.warn('kek');\r\n\t\tlsChannel.off('sound:save:success');\r\n\t},\r\n\tonRender: function() {\r\n\t\tvar settingListView = new View.Settings({\r\n\t\t\tdataset: localRead('settings')\r\n\t\t});\r\n\t\tthis.getRegion('list').show(settingListView)\r\n\t}\r\n});\r\n\r\nView.SettingItem = Marionette.View.extend({\r\n\ttemplate: '#t-setting-item',\r\n\tclassName: 'list-group-item list-settings-item',\r\n\tevents: {\r\n\t\t'input .form-control': 'onInput',\r\n\t\t'change .form-control[type=\"checkbox\"]': 'onChange',\r\n\t},\r\n\tonInput: function(e) {\r\n\t\tconsole.log(e.currentTarget.value);\r\n\t\tthis.model.set('value',e.currentTarget.value);\r\n\t},\r\n\tonChange: function(e) {\r\n\t\tthis.model.set('value',e.currentTarget.checked);\r\n\t\tlsChannel.trigger('setup:save:success',this.model.attributes);\r\n\t}\r\n});\r\nView.Settings = Marionette.CollectionView.extend({\r\n\ttagName: 'ul',\r\n\tclassName: 'list-group navibar-pad',\r\n\tchildView: View.SettingItem,\r\n\tinitialize: function (options) {\r\n\t\tthis.collection = new Data.Settings(options.dataset);\r\n\t\tconsole.log(this.collection);\r\n\t\tthis.bindEvents(app.model,this.accelerometerModelEvents);\r\n\t},\r\n\tcollectionEvents: {\r\n\t\t'change' : 'onModelChange'\r\n\t},\r\n\taccelerometerModelEvents: {\r\n\t\t'change' : 'onGravityChange'\r\n\t},\r\n\tonModelChange: function() {\r\n\t\tconsole.log('saved')\r\n\t\tlocalSave('settings',this.collection.models);\r\n\t},\r\n\tonGravityChange: function(model) {\r\n\t\tx = model.get('gravity').x*9/2;\r\n\t\ty = model.get('gravity').y*16/2;\r\n\t\tif (Math.abs(x) > 10/9 && Math.abs(y) > 10/16) {\r\n\t\t\tthis.$el.css({\r\n\t\t\t\ttransform: 'translate3d('+x+'px, '+y+'px,0)',\r\n\t\t\t\t// transform: 'translate3d('+x+'px, '+y+'px,0) rotateX('+y/5+'deg) rotateY('+x/5+'deg)',\r\n\t\t\t\t// transform: 'rotateX('+y+'deg) rotateY('+x+'deg) rotateZ('+x+'deg)',\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\nwindow.Setup = {\r\n\tView: View,\r\n\tData: Data,\r\n\tEntry: EntryPoint\r\n}\r\n\r\n}());"]}